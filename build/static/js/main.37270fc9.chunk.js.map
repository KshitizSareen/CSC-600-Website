{"version":3,"sources":["Reducer.tsx","Instruments.tsx","Socket.tsx","SideNav.tsx","Visualizers.tsx","MainPage.tsx","instruments/KshitizSareen.tsx","instruments/sroy97.tsx","instruments/Piano.tsx","img/mallet.png","instruments/JasJahan.tsx","instruments/thaoHo618.tsx","visualizers/Waveform.tsx","visualizers/JasJahan_3D.tsx","visualizers/thaoHo618.tsx","visualizers/sroy97.tsx","visualizers/KshitizSareen.tsx","State.tsx","App.tsx","index.tsx","instruments/Xylo.module.css","instruments/Kalimba.module.css"],"names":["DispatchAction","type","args","this","fromJS","appReducer","state","action","console","debug","newState","oldSocket","get","close","set","delete","songs","notes","find","s","pathname","getIn","search","instrumentName","substring","visualizerName","URLSearchParams","instruments","visualizers","instrument","i","name","visualizer","v","SongDetail","Albums","List","index","Number","Genres","SearchText","String","FilteredSongs","forEach","song","toLowerCase","trim","includes","push","error","toJS","update","Instrument","component","TopNav","className","InstrumentContainer","dispatch","InstrumentComponent","useState","Tone","oscillator","toDestination","synth","setSynth","useEffect","eachNote","split","noteObjs","map","note","idx","time","velocity","value","triggerAttackRelease","length","start","cancel","style","top","SOCKET_OPTS","transports","path","autoConnect","reconnection","timeout","idCounter","send","socket","msg","a","_id","Promise","resolve","reject","once","resp","success","emit","Section","title","children","RadioButton","to","text","active","onClick","classNames","fw7","Instruments","activeInstrument","location","useLocation","log","Visualizers","activeVisualizer","Songs","setSongDetails","SongDetails","songGenre","songAlbum","songArtist","genre","album","artist","genreId","genreDescription","albumId","albumTitle","artistId","artistName","id","undefined","SideNav","overflow","Visualizer","draw","VisualizerContainer","analyzer","useMemo","onResize","useCallback","p5","width","window","innerWidth","height","innerHeight","resizeCanvas","volume","connect","disconnect","setup","canvasParentRef","createCanvas","parent","WEBGL","windowResized","InstrumentPanel","VisualizerPanel","InstrumentAndVisualizer","left","ShowWelcome","ShowSongs","oscillators","setSearch","placeholder","onChange","target","display","flexDirection","justifyContent","marginTop","o","newType","oldSynth","margin","MainPage","isWelcome","DrumsInstrument","tonePlayers","playBackRate","reverb","steroe","properties","setProperties","tabIndex","icon","tonePlayer","autostart","playbackRate","mute","Reverb","Stereo","ExecuteSound","src","alt","min","max","property","propertyIndex","parseInt","step","WindInstruments","pitch","stereo","PlaySound","PianoKey","minor","onMouseDown","triggerAttack","onMouseUp","triggerRelease","zIndex","marginLeft","PianoType","PianoInstrument","keys","Range","octave","key","isMinor","indexOf","XylophoneInstrument","styles","page","pan3","names","props","xylophone","playbutton","circle","KalimbaInstrument","kalimba","notes2","WaveformVisualizer","dim","Math","background","strokeWeight","stroke","noFill","values","getValue","beginShape","amplitude","x","y","vertex","endShape","BoxVisualizer","locX","mouseX","locY","mouseY","ambientLight","directionalLight","pointLight","rotateZ","frameCount","rotateX","specularMaterial","translate","box","pop","CircleVisualizer","angleMode","floor","r","sin","cos","EllipticalVisualizer","val","amp","ellipse","BarCircleVisualizer","rotateY","startx","starty","startz","sphere","defaultState","Map","App","useReducer","onConnect","onDisconnect","newSocket","on","initializeSocket","albums","genres","rootEl","document","getElementById","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.37270fc9.chunk.js","sourcesContent":["// 3rd party\nimport { List, Map, fromJS } from 'immutable';\n\n// project deps\nimport { Instrument } from './Instruments';\nimport { Visualizer } from './Visualizers';\nimport { AppState } from './State';\n\n/** ------------------------------------------------------------------------ **\n * All user input is handled by DispatchAction.\n ** ------------------------------------------------------------------------ */\n\n/**\n * Observation: pure map (compare and contrast with impure map)\n *\n * 'instrument': Instrument\n * 'visualizer': Visualizer\n * 'songs': List<string>\n * 'notes': List<{id: number, songTitle: string, notes: string}>\n */\ntype DispatchArgs = {\n  [key: string]: any;\n};\n\n// A simple algebraic data-type with string literal types\ntype DispatchActionType =\n  | 'SET_SOCKET'\n  | 'DELETE_SOCKET'\n  | 'SET_SONGS'\n  | 'PLAY_SONG'\n  | 'STOP_SONG'\n  | 'SET_LOCATION'\n  | 'SHOW_SONG_DETAILS' \n  | 'SET_ALBUMS'\n  | 'SET_ALBUM_SONGS'\n  | 'SET_GENRES'\n  | 'SET_GENRE_SONGS'\n  | 'SEARCH_SONGS';\n\nexport class DispatchAction {\n  readonly type: DispatchActionType;\n  readonly args: Map<string, any>;\n\n  constructor(type: DispatchActionType, args?: DispatchArgs) {\n    this.type = type;\n    this.args = fromJS(args) as Map<string, any>;\n  }\n}\n\n/** ------------------------------------------------------------------------ **\n * Top-level application reducer.\n ** ------------------------------------------------------------------------ */\n\nexport function appReducer(state: AppState, action: DispatchAction): AppState {\n  const { type, args } = action;\n\n  console.debug(`${type}`);\n\n  // Question: Does this function remind of you registering callbacks?\n  const newState = (() => {\n    switch (type) {\n      case 'SET_SOCKET': {\n        const oldSocket = state.get('socket');\n        if (oldSocket) {\n          oldSocket.close();\n        }\n\n        return state.set('socket', args.get('socket'));\n      }\n      case 'DELETE_SOCKET': {\n        return state.delete('socket');\n      }\n      case 'SET_SONGS': {\n        const songs = args.get('songs');\n        return state.set('songs', songs);\n      }\n      case 'PLAY_SONG': {\n        const notes = state\n          .get('songs')\n          .find((s: any) => s.get('id') === args.get('id'))\n          .get('notes');\n        return state.set('notes', notes);\n      }\n      case 'STOP_SONG': {\n        return state.delete('notes');\n      }\n      case 'SET_LOCATION': {\n        const pathname = args.getIn(['location', 'pathname'], '') as string;\n        const search = args.getIn(['location', 'search'], '') as string;\n\n        const instrumentName: string = pathname.substring(1);\n        const visualizerName: string =\n          new URLSearchParams(search.substring(1)).get('visualizer') ?? '';\n        const instruments: List<Instrument> = state.get('instruments');\n        const visualizers: List<Visualizer> = state.get('visualizers');\n\n        const instrument = instruments.find(i => i.name === instrumentName);\n        const visualizer = visualizers.find(v => v.name === visualizerName);\n\n        return state\n          .set('instrument', instrument)\n          .set('visualizer', visualizer);\n      }\n\n      case 'SHOW_SONG_DETAILS':{\n        const SongDetail = args.get('SongDetail');\n        return state.set('SongDetail',SongDetail);\n      }\n\n      case 'SET_ALBUMS':{\n        let Albums : List<any> = args.get('albums',List());\n        return state.set('Albums',Albums);\n      }\n\n      case 'SET_ALBUM_SONGS':{\n        let Albums : List<any> =args.get('Albums',List())\n        let index : number = args.get('index',Number);\n        return state.set('FilteredSongs',Albums.get(index).get('songs'));\n      }\n\n      case 'SET_GENRES':{\n        let Genres : List<any> = args.get('genres',List());\n        return state.set('Genres',Genres);\n      }\n\n      case 'SET_GENRE_SONGS':{\n        let Genres : List<any> = args.get('Genres',List());\n        let index: number = args.get('index',Number);\n        return state.set('FilteredSongs',Genres.get(index).get('songs'));\n      }\n\n      case 'SEARCH_SONGS':{\n        let SearchText : String = args.get('search',String());\n        let songs : List<any> = args.get('songs',List());\n        let FilteredSongs : any[] = [];\n        songs.forEach(song=>{\n          let songTitle : String = song.get('songTitle').toLowerCase().trim();\n          if(songTitle.includes(SearchText.toLowerCase().trim()))\n          {\n            FilteredSongs.push(song);\n          }\n        })\n        return state.set('FilteredSongs',FilteredSongs);\n      }\n\n      default:\n        console.error(`type unknown: ${type}\\n`, args.toJS());\n        return state;\n    }\n  })();\n\n  console.debug(newState.update('socket', s => (s ? '[socket]' : s)).toJS());\n\n  return newState;\n}\n","// 3rd party library imports\nimport React, { useState, useEffect } from 'react';\nimport * as Tone from 'tone';\n\n// project imports\nimport { DispatchAction } from './Reducer';\nimport { AppState } from './State';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of an Instruments.\n ** ------------------------------------------------------------------------ */\n\nexport interface InstrumentProps {\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n  name: string;\n  synth: Tone.Synth;\n  setSynth: (f: (oldSynth: Tone.Synth) => Tone.Synth) => void;\n}\n\nexport class Instrument {\n  public readonly name: string;\n  public readonly component: React.FC<InstrumentProps>;\n\n  constructor(name: string, component: React.FC<InstrumentProps>) {\n    this.name = name;\n    this.component = component;\n  }\n}\n\nfunction TopNav({ name }: { name: string }) {\n  return (\n    <div\n      className={\n        'w-100 h3 bb b--light-gray flex justify-between items-center ph4'\n      }\n    >\n      <div>{name}</div>\n    </div>\n  );\n}\n\ninterface InstrumentContainerProps {\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n  instrument: Instrument;\n}\n\nexport const InstrumentContainer: React.FC<InstrumentContainerProps> = ({\n  instrument,\n  state,\n  dispatch,\n}: InstrumentContainerProps) => {\n  const InstrumentComponent = instrument.component;\n  const [synth, setSynth] = useState(\n    new Tone.Synth({\n      oscillator: { type: 'sine' } as Tone.OmniOscillatorOptions,\n    }).toDestination(),\n  );\n\n  const notes = state.get('notes');\n\n  useEffect(() => {\n    if (notes && synth) {\n      let eachNote = notes.split(' ');\n      let noteObjs = eachNote.map((note: string, idx: number) => ({\n        idx,\n        time: `+${idx / 4}`,\n        note,\n        velocity: 1,\n      }));\n\n      new Tone.Part((time, value) => {\n        // the value is an object which contains both the note and the velocity\n        synth.triggerAttackRelease(value.note, '4n', time, value.velocity);\n        if (value.idx === eachNote.length - 1) {\n          dispatch(new DispatchAction('STOP_SONG'));\n        }\n      }, noteObjs).start(0);\n\n      Tone.Transport.start();\n\n      return () => {\n        Tone.Transport.cancel();\n      };\n    }\n\n    return () => {};\n  }, [notes, synth, dispatch]);\n\n  return (\n    <div>\n      <TopNav name={instrument.name} />\n      <div\n        className={'bg-white absolute right-0 left-0'}\n        style={{ top: '4rem' }}\n      >\n        <InstrumentComponent\n          name={instrument.name}\n          state={state}\n          dispatch={dispatch}\n          synth={synth}\n          setSynth={setSynth}\n        />\n      </div>\n    </div>\n  );\n};\n","import { io as newSocket, Socket as SocketIO } from 'socket.io-client';\n\nconst SOCKET_URL = 'ws://localhost:3001';\n\nconst SOCKET_OPTS = {\n  transports: ['websocket'],\n  path: '/ws',\n  autoConnect: true,\n  reconnection: true,\n  timeout: 10000,\n};\n\nlet idCounter = 1;\n\nexport async function send(\n  socket: Socket,\n  name: string,\n  msg: any,\n): Promise<any> {\n  const _id = idCounter++;\n\n  return new Promise((resolve, reject) => {\n    socket.once(`${name}.${_id}`, resp => {\n      const { error, ...success } = resp;\n      if (success) {\n        resolve(success);\n      } else {\n        reject(error);\n      }\n    });\n    socket.emit(name, { _id, ...msg });\n  });\n}\n\n\nexport type Socket = SocketIO;\n\nexport function initializeSocket(\n  onConnect: (socket: Socket) => void,\n  onDisconnect: () => void,\n): Socket {\n  const socket = newSocket(SOCKET_URL, SOCKET_OPTS);\n\n  socket.on('connect', () => onConnect(socket));\n  socket.on('disconnect', onDisconnect);\n\n  return socket;\n}\n","// 3rd party library imports\nimport classNames from 'classnames';\nimport { List } from 'immutable';\nimport React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport {\n  RadioButton20,\n  RadioButtonChecked20,\n  Music20,\n} from '@carbon/icons-react';\n\n// project imports\nimport { DispatchAction } from './Reducer';\nimport { AppState } from './State';\nimport { Instrument } from './Instruments';\nimport { Visualizer } from './Visualizers';\nimport { send } from './Socket';\n\n\n/** ------------------------------------------------------------------------ **\n * All the components in the side navigation.\n ** ------------------------------------------------------------------------ */\n\ninterface SideNavProps {\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n}\n\nconst Section: React.FC<{ title: string }> = ({ title, children }) => {\n  return (\n    <div className=\"flex flex-column h-25 bb b--light-gray pa3\">\n      <div className=\"fw7 mb2\">{title} </div>\n      <div className=\"flex-auto overflow-scroll\">{children}</div>\n    </div>\n  );\n};\n\ninterface RadioButtonProps {\n  to: any,\n  text: string,\n  active: boolean,\n  onClick: () => void\n}\n\nfunction RadioButton({ to, text, active, onClick }: RadioButtonProps): JSX.Element {\n  return (\n    <Link to={to} className=\"no-underline\">\n      <div\n        className={classNames('f6 flex items-center black', { fw7: active })}\n        onClick={onClick}\n      >\n        {active ? (\n          <RadioButtonChecked20 className=\"mr1\" />\n        ) : (\n          <RadioButton20 className=\"mr1\" />\n        )}\n        <div className=\"dim\">{text}</div>\n      </div>\n    </Link>\n  );\n}\n\nfunction Instruments({ state }: SideNavProps): JSX.Element {\n  const instruments: List<Instrument> = state.get('instruments');\n  const activeInstrument = state.get('instrument')?.name;\n  const location = useLocation();\n\n  return (\n    <Section title=\"Instruments\">\n      {instruments.map(i => (\n        <RadioButton\n          key={i.name}\n          to={`/${i.name}${location.search}`}\n          text={i.name}\n          active={i.name === activeInstrument}\n          onClick={() => console.log(i.name)}\n        />\n      ))}\n    </Section>\n  );\n}\n\nfunction Visualizers({ state }: SideNavProps): JSX.Element {\n  const visualizers: List<Visualizer> = state.get('visualizers');\n  const activeVisualizer = state.get('visualizer')?.name;\n  const location = useLocation();\n\n  return (\n    <Section title=\"Visualizers\">\n      {visualizers.map(v => (\n        <RadioButton\n          key={v.name}\n          to={{\n            pathname: location.pathname,\n            search: `?visualizer=${v.name}`,\n          }}\n          text={v.name}\n          active={v.name === activeVisualizer}\n          onClick={() => console.log(v.name)}\n        />\n      ))}\n    </Section>\n  );\n}\n\nfunction Songs({ state, dispatch }: SideNavProps): JSX.Element {\n\n  async function setSongDetails(song: { get: (arg0: string) => any; })\n  {\n    const socket = state.get('socket');\n            const {SongDetails}  = await send(socket,'get_song_details',{});\n            const songGenre=song.get('fkGenreid');\n            const songAlbum=song.get('fkAlbumid');\n            const songArtist=song.get('fkArtistid');\n            let genre : string = \"\";\n            let album : string = \"\";\n            let artist: string = \"\";\n            for(let i=0;i<SongDetails.length;i++)\n            {\n              if(SongDetails[i].genreId===songGenre)\n              {\n                genre=SongDetails[i].genreDescription;\n              }\n              if(SongDetails[i].albumId===songAlbum)\n              {\n                album=SongDetails[i].albumTitle;\n              }\n              if(SongDetails[i].artistId===songArtist)\n              {\n                artist=SongDetails[i].artistName;\n              } \n            }\n            const SongDetail={\n              genre: genre,\n              album: album,\n              artist: artist\n            }\n            dispatch(new DispatchAction('SHOW_SONG_DETAILS',{SongDetail}));\n  }\n\n  const songs: List<any> = state.get('songs', List());\n  return (\n    <Section title=\"Playlist\">\n      {songs.map(song => (\n        <div\n          key={song.get('id')}\n          className=\"f6 pointer underline flex items-center no-underline i dim\"\n          onClick={async () =>\n            {\n            dispatch(new DispatchAction('PLAY_SONG', { id: song.get('id') }))\n            setSongDetails(song);\n            }\n          }\n        >\n          <Music20 className=\"mr1\" />\n          {song.get('songTitle')}\n        </div>\n      ))}\n    </Section>\n  );\n}\n\nfunction SongDetails({state,dispatch} : SideNavProps) : JSX.Element{\n\n  const SongDetail= state.get('SongDetail');\n  return(\n    <Section title=\"Song Details\">\n      <div>\n      {\n        SongDetail!==undefined ? SongDetail.get('genre') : \"\"\n      }\n      </div>\n      <div>\n      {\n        SongDetail!==undefined ? SongDetail.get('album') : \"\"\n      }\n      </div>\n      <div>\n      {\n        SongDetail!==undefined ? SongDetail.get('artist') : \"\"\n      }\n      </div>\n    </Section>\n  )\n}\n\nfunction Albums({state,dispatch} : SideNavProps) : JSX.Element\n{\n  const Albums : List<any> = state.get('Albums',List());\n  return(\n    <Section title=\"Albums\">\n      {\n        Albums.map((album,index)=>{\n          return(\n            <div \n            key={album.get('albumID')}\n            className=\"f6 pointer underline items-center no-underline i dim\"\n            onClick={()=>{\n              dispatch(new DispatchAction('SET_ALBUM_SONGS',{index,Albums}));\n            }}\n            >\n              {\n              album.get('albumTitle')\n              }\n            </div>\n\n          )\n        })\n      }\n    </Section>\n  )\n}\n\nfunction Genres({state,dispatch} : SideNavProps) : JSX.Element\n{\n  const Genres : List<any> = state.get('Genres',List());\n  return(\n    <Section title=\"Genres\">\n      {\n        Genres.map((genre,index)=>{\n          return(\n            <div \n            key={genre.get('genreId')}\n            className=\"f6 pointer underline items-center no-underline i dim\"\n            onClick={()=>{\n              dispatch(new DispatchAction('SET_GENRE_SONGS',{index,Genres}));\n            }}\n            >\n              {\n              genre.get('genreDescription')\n              }\n            </div>\n\n          )\n        })\n      }\n    </Section>\n  )\n}\n\nexport function SideNav({ state, dispatch }: SideNavProps): JSX.Element {\n  return (\n    <div className=\"absolute top-0 left-0 bottom-0 w5 z-1 shadow-1 bg-white flex flex-column\">\n      <div className=\"h3 fw7 f5 flex items-center pl3 bb b--light-gray\">\n        Nameless App\n      </div>\n      <div className=\"flex-auto\" style={{\n        overflow: 'scroll'\n      }}>\n        <Instruments state={state} dispatch={dispatch} />\n        <Visualizers state={state} dispatch={dispatch} />\n        <Songs state={state} dispatch={dispatch} />\n        <SongDetails state={state} dispatch={dispatch} />\n        <Albums state={state} dispatch={dispatch} />\n        <Genres state={state} dispatch={dispatch} />\n      </div>\n    </div>\n  );\n}\n","// 3rd party library imports\nimport * as Tone from 'tone';\nimport Sketch from 'react-p5';\nimport P5 from 'p5';\nimport React, { useEffect, useMemo, useCallback } from 'react';\n\ntype VisualizerDrawer = (p5: P5, analyzer: Tone.Analyser) => void;\n\ninterface VisualizerContainerProps {\n  visualizer: Visualizer;\n}\n\nexport class Visualizer {\n  public readonly name: string;\n  public readonly draw: VisualizerDrawer;\n\n  constructor(name: string, draw: VisualizerDrawer) {\n    this.name = name;\n    this.draw = draw;\n  }\n}\n\nexport function VisualizerContainer({ visualizer }: VisualizerContainerProps) {\n  const { name, draw } = visualizer;\n\n  const analyzer: Tone.Analyser = useMemo(\n    () => new Tone.Analyser('waveform', 256),\n    [],\n  );\n\n  const onResize = useCallback((p5: P5) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n\n    p5.resizeCanvas(width, height, false);\n  }, []);\n\n  useEffect(() => {\n    Tone.getDestination().volume.value = -5;\n    Tone.getDestination().connect(analyzer);\n    return () => {\n      Tone.getDestination().disconnect(analyzer);\n    };\n  }, [analyzer]);\n\n  const setup = (p5: P5, canvasParentRef: Element) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n    if(name !== \"3D Waveform\" && name !== \"3D Shape\" )\n    {\n    p5.createCanvas(width, height).parent(canvasParentRef);\n    }\n    else\n    {\n      p5.createCanvas(width, height,p5.WEBGL).parent(canvasParentRef);\n    }\n  };\n\n  return (\n    <div className={'bg-black absolute bottom-0 right-0 left-0 h-50'}>\n      <div className={'z-1 absolute left-0 top-0 pa4 white f5'}>{name}</div>\n      <Sketch\n        setup={setup}\n        draw={p5 => draw(p5, analyzer)}\n        windowResized={onResize}\n      />\n    </div>\n  );\n}\n","// 3rd party library imports\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as Tone from 'tone';\nimport { Music32 } from '@carbon/icons-react';\n\n// project imports\nimport { InstrumentContainer } from './Instruments';\nimport { AppState } from './State';\nimport { DispatchAction } from './Reducer';\nimport { SideNav } from './SideNav';\nimport { VisualizerContainer } from './Visualizers';\nimport { List } from 'immutable';\n\n\n\ntype PanelProps = {\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n};\n\n/** ------------------------------------------------------------------------ **\n * Instrument and visualizer component\n ** ------------------------------------------------------------------------ */\n\nfunction InstrumentPanel({ state, dispatch }: PanelProps): JSX.Element {\n  /**\n   * This React component is the top-level for the instrument.\n   */\n  const instrument = state.get('instrument');\n\n  return (\n    <div>\n      {instrument && (\n        <InstrumentContainer\n          state={state}\n          dispatch={dispatch}\n          instrument={instrument}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction VisualizerPanel({ state }: PanelProps): JSX.Element {\n  /**\n   * This React component is the top-level for the visualizer.\n   */\n  const visualizer = state.get('visualizer');\n\n  return (\n    <div>\n      {visualizer && (\n        <VisualizerContainer key={visualizer.name} visualizer={visualizer} />\n      )}\n    </div>\n  );\n}\n\nfunction InstrumentAndVisualizer({ state, dispatch }: PanelProps): JSX.Element {\n  /**\n   * This React component bundles the instrument panel and visualizer panel together.\n   */\n\n  return (\n    <div\n      className=\"absolute right-0 bottom-0 top-0 flex flex-column\"\n      style={{ left: '16rem' }}\n    >\n      <InstrumentPanel state={state} dispatch={dispatch} />\n      <VisualizerPanel state={state} dispatch={dispatch} />\n    </div>\n  );\n}\n\nfunction ShowWelcome({ state, dispatch }: PanelProps): JSX.Element {\n  return (\n    <div\n      className=\"absolute right-0 bottom-0 top-0 flex flex-column items-center justify-center\"\n      style={{ left: '16rem' }}  >  \n      <div className=\"mw6 lh-copy mb4\">\n        <Music32 />\n        <div className=\"f3 fw7 mb2\">Welcome to the case study.</div>\n        <div className=\"f4 mb3\">\n          Select an instrument and a visualizer on the left to serve some fresh beats.\n        </div>\n        {/* <div className=\"f5\">The UI is yours to design. Express yourself.</div> */}\n        <ShowSongs state={state} dispatch={dispatch}/>\n      </div>\n    </div>\n  );\n}\n\nfunction ShowSongs({ state, dispatch }: PanelProps) : JSX.Element {\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle',\n  ]) as List<OscillatorType>;\n\n\n  const [synth, setSynth] = useState(\n    new Tone.Synth({\n      oscillator: { type: 'amsawtooth' } as Tone.OmniOscillatorOptions,\n    }).toDestination(),\n  );\n  \n  const [search,setSearch] = useState(\"\");\n\n  const notes = state.get('notes');\n\n  const songs: List<any> = state.get('songs', List());\n  useEffect(() => {\n    if(search!==\"\")\n    {\n      dispatch(new DispatchAction('SEARCH_SONGS',{search,songs}));\n    }\n\n    if (notes && synth) {\n      let eachNote = notes.split(' ');\n      let noteObjs = eachNote.map((note: string, idx: number) => ({\n        idx,\n        time: `+${idx / 4}`,\n        note,\n        velocity: 1,\n      }));\n\n      new Tone.Part((time, value) => {\n        // the value is an object which contains both the note and the velocity\n        synth.triggerAttackRelease(value.note, '4n', time, value.velocity);\n        if (value.idx === eachNote.length - 1) {\n          dispatch(new DispatchAction('STOP_SONG'));\n        }\n      }, noteObjs).start(0);\n\n      Tone.Transport.start();\n\n      return () => {\n        Tone.Transport.cancel();\n      };\n    }\n\n    return () => {};\n  }, [notes, synth, search, songs, dispatch]);\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n      }).toDestination();\n    });\n  };\n\n\n  const FilteredSongs : List<any> = state.get('FilteredSongs',List());\n  return(\n    <div>\n      <input  className=\"input-reset ba b--black-20 pa2 mb2 db w-100\" placeholder=\"Enter Song Title\"  value={search} onChange={(value)=>{\n        setSearch(value.target.value);\n      }}></input>\n    <div \n    style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    }}\n    >\n      <div style={{\n        marginTop: '5%',\n      }}>  Search Results by Song Tittle\n      {\n       FilteredSongs !== undefined ?\n       FilteredSongs.map(song=>{\n         return(\n           <div\n           className=\"f6 pointer underline items-center no-underline i dim\"\n            onClick={()=>{\n            dispatch(new DispatchAction('PLAY_SONG', { id: song.get('id') }))\n           }}>\n             {\n               song.get('songTitle')\n             }\n             </div>\n         )\n       }) : null\n\n}\n</div> \n<div style={{\n        marginTop: '5%',\n      }}>\n        Oscillators List\n        {oscillators.map(o => (\n          <div\n          className=\"f6 pointer underline items-center no-underline i dim\"\n          onClick={() => setOscillator(o)}\n          style={{\n            margin: '1%'\n          }}\n          >\n            {\n              o\n            }\n            </div>\n        ))}\n      </div>\n    </div>\n    </div>\n  )\n}\n\n/** ------------------------------------------------------------------------ **\n * Main page component\n ** ------------------------------------------------------------------------ */\n\nexport function MainPage({ state, dispatch }: PanelProps): JSX.Element {\n  /**\n   * This React component bundles together the entire main page.\n   */\n\n  const location = useLocation();\n  const isWelcome = !state.get('instrument');\n  console.log('INSTRUMENT', isWelcome);\n\n  useEffect(() => {\n    dispatch(new DispatchAction('SET_LOCATION', { location }));\n  }, [dispatch, location]);\n\n  return (\n    <div\n      className=\"fixed top-0 left-0 h-100 w-100 bg-white\"\n      onClick={() => Tone.start()}\n    >\n      <SideNav state={state} dispatch={dispatch} />\n      {isWelcome ? (\n        <ShowWelcome state={state} dispatch={dispatch}/>\n      ) : (\n        <InstrumentAndVisualizer state={state} dispatch={dispatch} />\n      )}\n    </div>\n  );\n}\n\n","import { useState}  from \"react\";\nimport { Instrument } from \"../Instruments\"\nimport \"./Drums.css\"\nimport * as Tone from 'tone';\nfunction Drums()\n{\n    const tonePlayers=[\"/drumsounds/clap.wav\",\"/drumsounds/crash.wav\",\"/drumsounds/open-hihat.wav\",\"/drumsounds/kick.wav\",\"/drumsounds/snare.wav\",\"/drumsounds/closed-hihat.wav\"]\n    const Icons=[\"clap.png\",\"crash.png\",\"open-hihat.png\",\"kick.png\",\"snare.png\",\"closed-hihat.png\"]\n    const [properties,setProperties] = useState([{\n        playBackRate: 1,\n        volume: 1,\n        reverb: 0,\n        steroe: 0.5\n    },{\n        playBackRate: 1,\n        volume: 1,\n        reverb: 0,\n        steroe: 0.5\n    },\n    {\n        playBackRate: 1,\n        volume: 1,\n        reverb: 0,\n        steroe: 0.5\n    },\n    {\n        playBackRate: 1,\n        volume: 1,\n        reverb: 0,\n        steroe: 0.5\n    },\n    {\n        playBackRate: 1,\n        volume: 1,\n        reverb: 0,\n        steroe: 0.5\n    },\n    {\n        playBackRate: 1,\n        volume: 1,\n        reverb: 0,\n        steroe: 0.5\n    }])\n\n    function ExecuteSound(index: any) : void\n    {\n        const tonePlayer = new Tone.Player(tonePlayers[index]);\n        tonePlayer.autostart=true;\n        tonePlayer.playbackRate=properties[index].playBackRate;\n        if(properties[index].volume===0)\n        {\n            tonePlayer.mute=true;\n        }\n        else\n        {\n            tonePlayer.mute=false;\n            tonePlayer.volume.value=properties[index].volume;\n        }\n        if(properties[index].reverb!==0)\n        {\n        const Reverb = new Tone.Reverb(properties[index].reverb).toDestination();\n        tonePlayer.connect(Reverb);\n        }\n        if(properties[index].steroe>=0)\n        {\n            const Stereo = new Tone.StereoWidener(properties[index].steroe/2).toDestination();\n            tonePlayer.connect(Stereo);\n        }\n        tonePlayer.toDestination();\n    }\n\n    return(\n        <body tabIndex={0}>\n            <div className=\"drumkit\">\n            {\n                        Icons.map((icon,index)=>{\n                            return(\n                                <div className=\"padcontainer\">\n                <div className=\"pad\"  onClick={()=>{\n                    ExecuteSound(index);\n                }}>\n                    <img className=\"icon\" src={\"/icons/\"+icon} alt=\"clap\"/>\n                </div>\n                    <label>Playback Rate</label>\n                    <input type=\"range\" min=\"0\" max=\"5\" value={properties[index].playBackRate} onChange={(value)=>{\n                        setProperties(properties.map((property,propertyIndex)=>{\n                            if(propertyIndex===index)\n                            {\n                            property.playBackRate=Number.parseInt(value.target.value)\n                            }\n                            return(\n                                property\n                            )\n                        }))\n                    }}/>\n                    <label>Volume</label>\n                    <input type=\"range\" min=\"0\" max=\"10\" value={properties[index].volume} onChange={(value)=>{\n                        setProperties(properties.map((property,propertyIndex)=>{\n                            if(propertyIndex===index)\n                            {\n                            property.volume=Number.parseInt(value.target.value)\n                            }\n                            return(\n                                property\n                            )\n                        }))\n                    }}/>\n                    <label>Reverb</label>\n                    <input type=\"range\" min=\"0\" max=\"10\" value={properties[index].reverb} onChange={(value)=>{\n                        setProperties(properties.map((property,propertyIndex)=>{\n                            if(propertyIndex===index)\n                            {\n                            property.reverb=Number.parseInt(value.target.value)\n                            }\n                            return(\n                                property\n                            )\n                        }))\n                    }}/>\n                    <label>Stereo</label>\n                    <input type=\"range\" min=\"0\" step={1} max=\"2\" value={properties[index].steroe} onChange={(value)=>{\n                        setProperties(properties.map((property,propertyIndex)=>{\n                            if(propertyIndex===index)\n                            {\n                            property.steroe=Number.parseInt(value.target.value);\n                            }\n                            return(\n                                property\n                            )\n                        }))\n                    }}/>\n                    </div>\n                            )\n                        })\n                    }\n            </div>\n        </body>\n    )\n};\n\nexport const DrumsInstrument = new Instrument(\"Drums\",Drums);","/*\n    Author: Saptarshi Roy\n    Github Handle: sroy97\n */\n\nimport {useState}  from \"react\";\nimport { Instrument } from \"../Instruments\";\nimport \"./WindInstruments.css\";\nimport * as Tone from 'tone';\nfunction WindInstrument()\n{\n    const windIcons =[\"clarinet.png\",\n                      \"flute.png\",\n                      \"horn.png\",\n                      \"oboe.png\",\n                      \"piccolo.png\",\n                      \"saxophone.png\",\n                      \"trombone.png\",\n                      \"trumpet.png\",\n                      \"tuba.png\"]\n\n    const tonePlayers=[\"/WindSounds/clarinet.wav\",\n                       \"/WindSounds/flute.wav\",\n                       \"/WindSounds/horn.wav\",\n                       \"/WindSounds/oboe.wav\",\n                       \"/WindSounds/piccolo.wav\",\n                       \"/WindSounds/sax.wav\",\n                       \"/WindSounds/trombone.wav\",\n                       \"/WindSounds/trumpet.wav\",\n                       \"/WindSounds/tuba.wav\"]\n\n    const [properties,setProperties] = useState([{\n        volume: 1,\n        pitch: 10,\n        reverb: 0.45,\n        stereo: 0.5\n    },{\n        volume: 1,\n        pitch: 10,\n        reverb: 0.45,\n        stereo: 0.5\n    },\n    {\n        volume: 1,\n        pitch: 10,\n        reverb: 0.45,\n        stereo: 0.5\n    },\n    {\n        volume: 1,\n        pitch: 10,\n        reverb: 0.45,\n        stereo: 0.5\n    },\n    {\n        volume: 1,\n        pitch: 10,\n        reverb: 0.45,\n        stereo: 0.5\n    },\n    {\n        volume: 1,\n        pitch: 10,\n        reverb: 0.45,\n        stereo: 0.5\n    },\n    {\n        volume: 1,\n        pitch: 10,\n        reverb: 0.75,\n        stereo: 0.5\n    },\n    {\n        volume: 1,\n        pitch: 10,\n        reverb: 0.75,\n        stereo: 0.5\n    },\n    {\n        volume: 1,\n        pitch: 10,\n        reverb: 0.75,\n        stereo: 0.5\n    }])\n            \n    function PlaySound(index: any) : void\n    {\n        const tonePlayer = new Tone.Player(tonePlayers[index]);\n        tonePlayer.autostart=true;\n        if(properties[index].volume===0)\n        {\n            tonePlayer.mute=true;\n        }\n        else\n        {\n            tonePlayer.mute=false;\n            tonePlayer.volume.value=properties[index].volume;\n        }\n        \n        if (properties[index].pitch!==0)\n        {\n         // const pitchShift = new Tone.PitchShift({ pitch: -5 }).toMaster();\n            const pitch = new Tone.PitchShift(properties[index].pitch).toDestination();\n            tonePlayer.connect(pitch);\n        }\n\n        if(properties[index].reverb!==0)\n        {\n            const Reverb = new Tone.Reverb(properties[index].reverb).toDestination();\n            tonePlayer.connect(Reverb);\n        }\n\n        if(properties[index].stereo>=0)\n        {\n            const Stereo = new Tone.StereoWidener(properties[index].stereo).toDestination();\n            tonePlayer.connect(Stereo);\n        }\n\n        tonePlayer.toDestination();\n    }\n\n    return(\n        <body tabIndex={0}>\n        <div className=\"windkit\">\n            {\n                        windIcons.map((icon,index)=>{\n                            return(\n                                <div className=\"instrumentcontainer\">\n                <div className=\"windinstrument\"  onClick={()=>{\n                    PlaySound(index);\n                }}>\n                    <img className=\"icon\" src={\"/WindIcons/\"+icon} alt=\"\"/>\n                </div>\n                    <label>Volume</label>\n                    <input type=\"range\" min=\"0\" max=\"10\" value={properties[index].volume} onChange={(value)=>{\n                        setProperties(properties.map((property,propertyIndex)=>{\n                            if(propertyIndex===index)\n                            {\n                            property.volume=Number.parseInt(value.target.value)\n                            }\n                            return(\n                                property\n                            )\n                        }))\n                    }}/>\n                    <label>Pitch</label>\n                    <input type=\"range\" min=\"0\" max=\"10\" value={properties[index].pitch} onChange={(value)=>{\n                        setProperties(properties.map((property,propertyIndex)=>{\n                            if(propertyIndex===index)\n                            {\n                            property.pitch=Number.parseInt(value.target.value)\n                            }\n                            return(\n                                property\n                            )\n                        }))\n                    }}/>\n                    <label>Reverb</label>\n                    <input type=\"range\" min=\"0\" max=\"10\" value={properties[index].reverb} onChange={(value)=>{\n                        setProperties(properties.map((property,propertyIndex)=>{\n                            if(propertyIndex===index)\n                            {\n                            property.reverb=Number.parseInt(value.target.value)\n                            }\n                            return(\n                                property\n                            )\n                        }))\n                    }}/>\n                    <label>Stereo</label>\n                    <input type=\"range\" min=\"0\" step={1} max=\"2\" value={properties[index].stereo} onChange={(value)=>{\n                        setProperties(properties.map((property,propertyIndex)=>{\n                            if(propertyIndex===index)\n                            {\n                            property.stereo=Number.parseInt(value.target.value);\n                            }\n                            return(\n                                property\n                            )\n                        }))\n                    }}/>\n                    </div>\n                            )\n                        })\n                    }\n            </div>\n        </body>\n    )\n};\n\nexport const WindInstruments = new Instrument(\"Wind Family\",WindInstrument);\n","// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React from 'react';\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\ninterface PianoKeyProps {\n  note: string; // C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, B\n  duration?: string;\n  synth?: Tone.Synth; // Contains library code for making sound\n  minor?: boolean; // True if minor key, false if major key\n  octave: number;\n  index: number; // octave + index together give a location for the piano key\n}\n\nexport function PianoKey({\n  note,\n  synth,\n  minor,\n  index,\n}: PianoKeyProps): JSX.Element {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  return (\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    <div\n      onMouseDown={() => synth?.triggerAttack(`${note}`)} // Question: what is `onMouseDown`?\n      onMouseUp={() => synth?.triggerRelease('+0.25')} // Question: what is `onMouseUp`?\n      className={classNames('ba pointer absolute dim', {\n        'bg-black black h3': minor, // minor keys are black\n        'black bg-white h4': !minor, // major keys are white\n      })}\n      style={{\n        // CSS\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: minor ? 1 : 0,\n        width: minor ? '1.5rem' : '2rem',\n        marginLeft: minor ? '0.25rem' : 0,\n      }}\n    ></div>\n  );\n}\n\n// eslint-disable-next-line\nfunction PianoKeyWithoutJSX({\n  note,\n  synth,\n  minor,\n  index,\n}: PianoKeyProps): JSX.Element {\n  /**\n   * This React component for pedagogical purposes.\n   * See `PianoKey` for the React component with JSX (JavaScript XML).\n   */\n  return React.createElement(\n    'div',\n    {\n      onMouseDown: () => synth?.triggerAttack(`${note}`),\n      onMouseUp: () => synth?.triggerRelease('+0.25'),\n      className: classNames('ba pointer absolute dim', {\n        'bg-black black h3': minor,\n        'black bg-white h4': !minor,\n      }),\n      style: {\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: minor ? 1 : 0,\n        width: minor ? '1.5rem' : '2rem',\n        marginLeft: minor ? '0.25rem' : 0,\n      },\n    },\n    [],\n  );\n}\n\nfunction PianoType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n        'b--black black': active,\n        'gray b--light-gray': !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}\n\nfunction Piano({ synth, setSynth }: InstrumentProps): JSX.Element {\n  const keys = List([\n    { note: 'C', idx: 0 },\n    { note: 'Db', idx: 0.5 },\n    { note: 'D', idx: 1 },\n    { note: 'Eb', idx: 1.5 },\n    { note: 'E', idx: 2 },\n    { note: 'F', idx: 3 },\n    { note: 'Gb', idx: 3.5 },\n    { note: 'G', idx: 4 },\n    { note: 'Ab', idx: 4.5 },\n    { note: 'A', idx: 5 },\n    { note: 'Bb', idx: 5.5 },\n    { note: 'B', idx: 6 },\n  ]);\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n      }).toDestination();\n    });\n  };\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle',\n  ]) as List<OscillatorType>;\n\n  return (\n    <div className=\"pv4\">\n      <div className=\"relative dib h4 w-100 ml4\">\n        {Range(2, 7).map(octave =>\n          keys.map(key => {\n            const isMinor = key.note.indexOf('b') !== -1;\n            const note = `${key.note}${octave}`;\n            return (\n              <PianoKey\n                key={note} //react key\n                note={note}\n                synth={synth}\n                minor={isMinor}\n                octave={octave}\n                index={(octave - 2) * 7 + key.idx}\n              />\n            );\n          }),\n        )}\n      </div>\n      <div className={'pl4 pt4 flex'}>\n        {oscillators.map(o => (\n          <PianoType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const PianoInstrument = new Instrument('Piano', Piano);\n\n","export default __webpack_public_path__ + \"static/media/mallet.8a244a80.png\";","/*\n    Author: Jasmine Jahan\n    GitHub Handle: jasjahan\n    Xylophone.tsx: Adding Xylophone Instrument\n*/\n\nimport * as Tone from 'tone';\nimport styles from './Xylo.module.css'; \nimport { Instrument } from \"../Instruments\"\nimport pan3 from '../../src/img/mallet.png';\n\n\nfunction Xylophone(){\n    const tonePlayers = ['/XyloSounds/c.wav', \n                        '/XyloSounds/d1.wav',\n                        '/XyloSounds/e1.wav',\n                        '/XyloSounds/f.wav',\n                        '/XyloSounds/g.wav',\n                        '/XyloSounds/a.wav',\n                        '/XyloSounds/b.wav',\n                        '/XyloSounds/c2.wav']\n\n    const names = ['c', 'd1', 'e1', 'f', 'g', 'a', 'b', 'c2']\n    \n\n  function ExecuteSound(index: any) : void {\n      const tonePlayer = new Tone.Player(tonePlayers[index]);\n      tonePlayer.autostart=true;\n      tonePlayer.toDestination();\n    }\n\n        return(\n            <body tabIndex={0}>\n              <div className={styles.page}>\n                <img src={pan3}  width={300}  height={250}  alt=\"NO IMG\"/> \n                  {names.map((names, index, props:any)=>{\n                    return(\n                     <div className={styles.xylophone}>\n                         <button className={styles.playbutton} \n                                 style = {{height: ( 200 - (15 * index )) + 'px'}}\n                                 onClick={()=>{ ExecuteSound(index);}}>\n                                    <div className = {styles.circle}/>\n                                        {names} \n                                    <div className = {styles.circle}/>\n                          </button>\n                     </div>\n                     ) \n                   })\n                  }\n          {/* <PlayButton notes = {notes[0]}/>\n          <PlayButton notes = {notes[1]}/>\n          <PlayButton notes = {notes[2]}/>\n          <PlayButton notes = {notes[3]}/>\n          <PlayButton notes = {notes[4]}/>\n          <PlayButton notes = {notes[5]}/>\n          <PlayButton notes = {notes[6]}/>\n          <PlayButton notes = {notes[7]}/> */}\n\n          {/* <button onClick = {()=> new Audio(notes[0].file).play()}>c</button>\n          <button onClick = {()=> new Audio(notes[1].file).play()}>d1</button>\n          <button onClick = {()=> new Audio(notes[2].file).play()}>e1</button>\n          <button onClick = {()=> new Audio(notes[3].file).play()}>f</button>\n          <button onClick = {()=> new Audio(notes[4].file).play()}>g</button>\n          <button onClick = {()=> new Audio(notes[5].file).play()}>a</button>\n          <button onClick = {()=> new Audio(notes[6].file).play()}>b</button>\n          <button onClick = {()=> new Audio(notes[7].file).play()}>c2</button> */}\n              </div>\n            </body>\n          )\n  };   \n\n\nexport const XylophoneInstrument = new Instrument('Xylophone', Xylophone);\n\n\n\n","// 3rd party library imports\nimport * as Tone from 'tone';\n\n// project imports\nimport styles from './Kalimba.module.css'; \nimport { Instrument } from \"../Instruments\"\n\nfunction Kalimba(){\n  const tonePlayers = [ '/KalimbaSounds/B.wav', \n                        '/KalimbaSounds/G.wav',\n                        '/KalimbaSounds/E.wav',\n                        '/KalimbaSounds/C.wav',\n                        '/KalimbaSounds/A.wav',\n                        '/KalimbaSounds/F.wav',\n                        '/KalimbaSounds/D.wav',\n                        '/KalimbaSounds/C.wav']\n\n  const notes = ['B', 'G', 'E', 'C', 'A', 'F', 'D', 'C']\n  const notes2 = ['E', 'G', 'B', 'D', 'F', 'A', 'C']\n\n  function ExecuteSound(index: any) : void {\n    const tonePlayer = new Tone.Player(tonePlayers[index]);\n    tonePlayer.autostart=true;\n    tonePlayer.toDestination();\n  }\n  \n  return(\n      <body tabIndex={0}>\n        <div className={styles.page}> \n          {notes.map((notes, index, props:any)=> {\n            return(\n              <div className={styles.kalimba}>\n                  <button className={styles.playbutton}           \n                    style = {{height: ( (30 * index * 2) + (200))}}\n                    onClick={()=>{ ExecuteSound(index);}}>\n                    <div/>{notes}<div/>\n                  </button>    \n              </div>\n              )})\n          }\n\n          {notes2.map((notes2, index, props:any)=> {\n            return(\n              <div className={styles.kalimba}>\n                <button className={styles.playbutton} \n                  style = {{height: (540 - (35 * index * 2))}}\n                  onClick={()=>{ ExecuteSound(index);}}>\n                    <div/>{notes2}<div/>\n                </button>\n              </div>\n              )})\n          }\n        </div>\n      </body>\n    )\n  };   \n\nexport const KalimbaInstrument = new Instrument(\"Kalimba\", Kalimba);","// 3rd party library imports\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\n// project imports\nimport { Visualizer } from '../Visualizers';\n\n\nexport const WaveformVisualizer = new Visualizer(\n  'Waveform',\n  (p5: P5, analyzer: Tone.Analyser) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n    const dim = Math.min(width, height);\n\n    p5.background(0, 0, 0, 255);\n\n    p5.strokeWeight(dim * 0.01);\n    p5.stroke(255, 255, 255, 255);\n    p5.noFill();\n\n    const values = analyzer.getValue();\n    p5.beginShape();\n    for (let i = 0; i < values.length; i++) {\n      const amplitude = values[i] as number;\n      const x = p5.map(i, 0, values.length - 1, 0, width);\n      const y = height / 2 + amplitude * height;\n      // Place vertex\n      p5.vertex(x, y);\n    }\n    p5.endShape();\n  },\n);\n","/*\n    Author: Jasmine Jahan\n    GitHub Handle: jasjahan\n    JasJahan_3D.tsx: Adding a 3D Shape Visualizer\n*/\n\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\nimport { Visualizer } from '../Visualizers';\n\nexport const BoxVisualizer = new Visualizer(\n        '3D Shape',\n        (p5: P5, analyzer: Tone.Analyser) => {\n          const width = window.innerWidth;\n          const height = window.innerHeight / 2;\n\n          p5.background(\"black\"); \n          let values = analyzer.getValue();\n          let locX = p5.mouseX - height / 2;\n          let locY = p5.mouseY - width / 2;\n          p5.ambientLight(50);\n          p5.directionalLight(255, 0, 0, 0.25, 0.25, 0);\n          p5.pointLight(0, 0, 255, locX, locY, 250);\n\n          p5.beginShape();     \n          p5.rotateZ(p5.frameCount * 0.02);\n          p5.rotateX(p5.frameCount * 0.02);\n          p5.specularMaterial(250);\n          p5.translate(-width /10,0,0);\n          for (let i = 0; i < values.length; i++) {  \n            let amplitude = values[i] as number;\n            let x = p5.map(i, 0, values.length -1, 0, amplitude * height) + width;\n            let y = (  height / 2 + amplitude * width) + height;     \n            // p5.translate(width/15, 0, 0); \n            p5.push();\n            p5.box(x *.07, y *.15 , 100);\n            p5.pop(); \n          }\n     \n         p5.endShape();\n        } \n        \n      );\n","/*\n    Author: Thao Ho\n    GitHub Handle: thaoHo618\n\n    thaoHo618.tsx: Adding a circle waveform visualizer\n*/\n\n// 3rd party library imports\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\n// project imports\nimport { Visualizer } from '../Visualizers';\n\nexport const CircleVisualizer = new Visualizer(\n    'Circle Waveform',\n    (p5: P5, analyzer: Tone.Analyser) => {\n    \n        const width = window.innerWidth;\n        const height = window.innerHeight / 2;\n        const dim = Math.min(width, height);\n        \n        p5.angleMode('degrees');\n        \n        p5.background(0, 0, 0, 255); // sets background color\n        p5.stroke(255, 0, 127);  // sets border color\n        p5.strokeWeight(dim * 0.02); // sets border thickness \n        p5.noFill(); // disables filling geometry\n        p5.translate (width/2.5, height/2 ); // sets location of the object\n        const values = analyzer.getValue(); \n\n        p5.beginShape();\n        for ( var i = 0 ; i <= 180; i++) { // creating the first half of the circle, thus <= 180\n            var index = p5.floor(p5.map(i, 0, 180, 0, values.length - 1));\n\n            // using the index to map the radius of the circle to the waveform.\n            var r = p5.map(values[index] as number, -1, 1, 150, 300); // 150 and 350 are min and max radius of circle respectively                \n            \n            var x =  r * p5.sin(i);\n            var y =  r * p5.cos(i) ;\n            p5.vertex(x, y);\n        }\n        p5.endShape();\n\n        \n        p5.beginShape();\n        // eslint-disable-next-line\n        for ( var i = 0 ; i <= 180; i++) { // creating the mirror of the first half\n            // eslint-disable-next-line\n            var index = p5.floor(p5.map(i, 0, 180, 0, values.length - 1));\n\n            // using the index to map the radius of the circle to the waveform.\n            // eslint-disable-next-line\n            var r = p5.map(values[index] as number, -1, 1, 150, 300);            \n            \n            // eslint-disable-next-line\n            var x =  r * (-p5.sin(i)); // Added a negative sign to create a mirrored image of the circle\n            // eslint-disable-next-line\n            var y =  r * p5.cos(i) ;\n            p5.vertex(x, y);\n        }\n        p5.endShape();\n    },\n  );","/*\n    Author: Saptarshi Roy\n    GitHub Handle: sroy97\n\n    sroy97.tsx: string waveform visualizer\n*/\n\n// 3rd party library imports\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\n// project imports\nimport { Visualizer } from '../Visualizers';\n\nexport const EllipticalVisualizer = new Visualizer(\n    'Elliptical Nebular Waveform',\n    (p5: P5, analyzer: Tone.Analyser) => {\n    \n        const width = window.innerWidth;\n        const height = window.innerHeight / 2;\n        \n        p5.background(0, 0, 0, 210); \n        p5.stroke(255,0,127);\n        p5.strokeWeight(3) \n        p5.noFill(); \n\n        const values = analyzer.getValue(); \n\n        p5.beginShape();\n\n        values.forEach((val, i) => {\n          const amp = values[i] as number\n          p5.ellipse(600, 200, 300 + width * amp, 150 + height * amp);\n          p5.ellipse(600, 200, 150 + height * amp, 300 + width * amp);\n        });\n\n        p5.endShape();\n\n    },\n  );\n","// 3rd party library imports\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\n// project imports\nimport { Visualizer } from '../Visualizers';\n\nexport const BarCircleVisualizer = new Visualizer(\n  '3D Waveform',\n  (p5: P5, analyzer: Tone.Analyser) => {\n\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n\n      p5.background(250, 250, 250, 255);\n\n      const values = analyzer.getValue();\n      p5.beginShape();\n      p5.rotateY(p5.frameCount * 0.01);\n      p5.rotateX(p5.frameCount*0.01);\n      let startx=0;\n      let starty=0;\n      let startz=0;\n      for (let i = 0; i < values.length; i++) {\n        const amplitude = values[i] as number;\n        const x = p5.map(i, 0, values.length - 1, 0, width)-width/2;\n        const y = (height / 2 + amplitude * height)-height/2;\n        // Place vertex\n        if(i%2===0)\n        {\n        p5.translate(x-startx,y-starty,(0.1*i)-startz);\n        startz=i*0.1;\n        }\n        else\n        {\n            p5.translate(x-startx,y-starty,(-0.1*i)-startz);\n            startz=i*-0.1;\n        }\n        p5.push();\n      p5.sphere(8, 6, 4);\n      p5.pop();\n      startx=x;\n      starty=y;\n      }\n      p5.endShape();\n    }\n\n   // p5.endShape();\n\n);\n","// 3rd party\nimport { List, Map } from 'immutable';\nimport { DrumsInstrument } from './instruments/KshitizSareen';\nimport { WindInstruments } from './instruments/sroy97';\n\n// project dependencies\nimport { PianoInstrument} from './instruments/Piano';\nimport { XylophoneInstrument } from './instruments/JasJahan';\nimport { KalimbaInstrument } from './instruments/thaoHo618';\nimport { WaveformVisualizer } from './visualizers/Waveform';\nimport { BoxVisualizer } from './visualizers/JasJahan_3D';\n\n\nimport { CircleVisualizer } from './visualizers/thaoHo618'; \nimport { EllipticalVisualizer } from './visualizers/sroy97';\nimport { BarCircleVisualizer} from './visualizers/KshitizSareen';\n/** ------------------------------------------------------------------------ **\n * The entire application state is stored in AppState.\n ** ------------------------------------------------------------------------ */\n\n/**\n * Observation: pure map (compare and contrast with impure map)\n *\n * 'instrument': Instrument\n * 'visualizer': Visualizer\n */\nexport type AppState = Map<string, any>;\n\n\nconst instruments = List([PianoInstrument,DrumsInstrument,XylophoneInstrument,WindInstruments,KalimbaInstrument]);\nconst visualizers = List([WaveformVisualizer,CircleVisualizer,EllipticalVisualizer,BarCircleVisualizer,BoxVisualizer]);\nexport const defaultState: AppState = Map<string, any>({\n  instruments,\n  visualizers,\n});\n","// 3rd party library imports\nimport { useReducer, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n// project imports\nimport { MainPage } from './MainPage';\nimport { DispatchAction, appReducer } from './Reducer';\nimport { defaultState } from './State';\nimport { initializeSocket, send } from './Socket';\n\n\n\n// css imports\nimport 'animate.css';\n\n/** ------------------------------------------------------------------------ **\n * App component\n ** ------------------------------------------------------------------------ */\n\nfunction App() {\n  const [state, dispatch] = useReducer(appReducer, defaultState);\n\n  useEffect(() => {\n    initializeSocket(\n      async socket => {\n        dispatch(new DispatchAction('SET_SOCKET', { socket }));\n        const { songs } = await send(socket, 'get_songs',{});\n        dispatch(new DispatchAction('SET_SONGS', { songs }));\n        const {albums} = await send(socket,'get_albums',{});\n        dispatch(new DispatchAction('SET_ALBUMS',{albums})); \n        const {genres} = await send(socket,'get_genres',{});\n        dispatch(new DispatchAction('SET_GENRES',{genres}));\n      },\n      () => {\n        dispatch(new DispatchAction('DELETE_SOCKET'));\n      },\n    );\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <MainPage state={state} dispatch={dispatch} />\n        </Route>\n        <Route path=\"/:instrument\">\n          <MainPage state={state} dispatch={dispatch} />\n        </Route>\n        <Route path=\"*\">\n          <div>404</div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// 3rd party library imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// project imports\nimport App from './App';\n\n// CSS\nimport './index.css';\nimport './tachyons.css';\n\n\n/** ------------------------------------------------------------------------ **\n * Entry point.\n ** ------------------------------------------------------------------------ */\n\nfunction onReactLoaded() {\n  console.log('React has loaded.');\n}\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootEl,  // Insert into DOM here\n  onReactLoaded,\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"xylophone\":\"Xylo_xylophone__C762a\",\"page\":\"Xylo_page__1OWjH\",\"playbutton\":\"Xylo_playbutton__23eac\",\"circle\":\"Xylo_circle__25cIg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"kalimba\":\"Kalimba_kalimba__3-X55\",\"page\":\"Kalimba_page__30zHe\",\"playbutton\":\"Kalimba_playbutton__uKuwZ\"};"],"sourceRoot":""}