[{"/Users/kshitiz/CSC-600-Website/src/index.tsx":"1","/Users/kshitiz/CSC-600-Website/src/App.tsx":"2","/Users/kshitiz/CSC-600-Website/src/MainPage.tsx":"3","/Users/kshitiz/CSC-600-Website/src/Reducer.tsx":"4","/Users/kshitiz/CSC-600-Website/src/State.tsx":"5","/Users/kshitiz/CSC-600-Website/src/Socket.tsx":"6","/Users/kshitiz/CSC-600-Website/src/SideNav.tsx":"7","/Users/kshitiz/CSC-600-Website/src/Instruments.tsx":"8","/Users/kshitiz/CSC-600-Website/src/Visualizers.tsx":"9","/Users/kshitiz/CSC-600-Website/src/visualizers/JasJahan_3D.tsx":"10","/Users/kshitiz/CSC-600-Website/src/visualizers/Waveform.tsx":"11","/Users/kshitiz/CSC-600-Website/src/visualizers/KshitizSareen.tsx":"12","/Users/kshitiz/CSC-600-Website/src/visualizers/thaoHo618.tsx":"13","/Users/kshitiz/CSC-600-Website/src/instruments/Piano.tsx":"14","/Users/kshitiz/CSC-600-Website/src/visualizers/sroy97.tsx":"15"},{"size":612,"mtime":1663496175390,"results":"16","hashOfConfig":"17"},{"size":1233,"mtime":1663499497978,"results":"18","hashOfConfig":"17"},{"size":6553,"mtime":1663496175376,"results":"19","hashOfConfig":"17"},{"size":4739,"mtime":1663496175377,"results":"20","hashOfConfig":"17"},{"size":1329,"mtime":1663496175378,"results":"21","hashOfConfig":"17"},{"size":962,"mtime":1663496175378,"results":"22","hashOfConfig":"17"},{"size":3328,"mtime":1663499235670,"results":"23","hashOfConfig":"17"},{"size":2709,"mtime":1663496175376,"results":"24","hashOfConfig":"17"},{"size":1778,"mtime":1663496175378,"results":"25","hashOfConfig":"17"},{"size":1381,"mtime":1663496175395,"results":"26","hashOfConfig":"17"},{"size":832,"mtime":1663496175395,"results":"27","hashOfConfig":"17"},{"size":1225,"mtime":1663496175395,"results":"28","hashOfConfig":"17"},{"size":2266,"mtime":1663496175396,"results":"29","hashOfConfig":"17"},{"size":4883,"mtime":1663496175393,"results":"30","hashOfConfig":"17"},{"size":942,"mtime":1663496175396,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"a7obkc",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/kshitiz/CSC-600-Website/src/index.tsx",[],["66","67"],"/Users/kshitiz/CSC-600-Website/src/App.tsx",["68"],"/Users/kshitiz/CSC-600-Website/src/MainPage.tsx",["69"],"// 3rd party library imports\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as Tone from 'tone';\nimport { Music32 } from '@carbon/icons-react';\n\n// project imports\nimport { InstrumentContainer } from './Instruments';\nimport { AppState } from './State';\nimport { DispatchAction } from './Reducer';\nimport { SideNav } from './SideNav';\nimport { VisualizerContainer } from './Visualizers';\nimport { List } from 'immutable';\n\n\n\ntype PanelProps = {\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n};\n\n/** ------------------------------------------------------------------------ **\n * Instrument and visualizer component\n ** ------------------------------------------------------------------------ */\n\nfunction InstrumentPanel({ state, dispatch }: PanelProps): JSX.Element {\n  /**\n   * This React component is the top-level for the instrument.\n   */\n  const instrument = state.get('instrument');\n\n  return (\n    <div>\n      {instrument && (\n        <InstrumentContainer\n          state={state}\n          dispatch={dispatch}\n          instrument={instrument}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction VisualizerPanel({ state }: PanelProps): JSX.Element {\n  /**\n   * This React component is the top-level for the visualizer.\n   */\n  const visualizer = state.get('visualizer');\n\n  return (\n    <div>\n      {visualizer && (\n        <VisualizerContainer key={visualizer.name} visualizer={visualizer} />\n      )}\n    </div>\n  );\n}\n\nfunction InstrumentAndVisualizer({ state, dispatch }: PanelProps): JSX.Element {\n  /**\n   * This React component bundles the instrument panel and visualizer panel together.\n   */\n\n  return (\n    <div\n      className=\"absolute right-0 bottom-0 top-0 flex flex-column\"\n      style={{ left: '16rem' }}\n    >\n      <InstrumentPanel state={state} dispatch={dispatch} />\n      <VisualizerPanel state={state} dispatch={dispatch} />\n    </div>\n  );\n}\n\nfunction ShowWelcome({ state, dispatch }: PanelProps): JSX.Element {\n  return (\n    <div\n      className=\"absolute right-0 bottom-0 top-0 flex flex-column items-center justify-center\"\n      style={{ left: '16rem' }}  >  \n      <div className=\"mw6 lh-copy mb4\">\n        <Music32 />\n        <div className=\"f3 fw7 mb2\">Welcome to the case study.</div>\n        <div className=\"f4 mb3\">\n          Select an instrument and a visualizer on the left to serve some fresh beats.\n        </div>\n        {/* <div className=\"f5\">The UI is yours to design. Express yourself.</div> */}\n      </div>\n    </div>\n  );\n}\n\nfunction ShowSongs({ state, dispatch }: PanelProps) : JSX.Element {\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle',\n  ]) as List<OscillatorType>;\n\n\n  const [synth, setSynth] = useState(\n    new Tone.Synth({\n      oscillator: { type: 'amsawtooth' } as Tone.OmniOscillatorOptions,\n    }).toDestination(),\n  );\n  \n  const [search,setSearch] = useState(\"\");\n\n  const notes = state.get('notes');\n\n  const songs: List<any> = state.get('songs', List());\n  useEffect(() => {\n    if(search!==\"\")\n    {\n      dispatch(new DispatchAction('SEARCH_SONGS',{search,songs}));\n    }\n\n    if (notes && synth) {\n      let eachNote = notes.split(' ');\n      let noteObjs = eachNote.map((note: string, idx: number) => ({\n        idx,\n        time: `+${idx / 4}`,\n        note,\n        velocity: 1,\n      }));\n\n      new Tone.Part((time, value) => {\n        // the value is an object which contains both the note and the velocity\n        synth.triggerAttackRelease(value.note, '4n', time, value.velocity);\n        if (value.idx === eachNote.length - 1) {\n          dispatch(new DispatchAction('STOP_SONG'));\n        }\n      }, noteObjs).start(0);\n\n      Tone.Transport.start();\n\n      return () => {\n        Tone.Transport.cancel();\n      };\n    }\n\n    return () => {};\n  }, [notes, synth, search, songs, dispatch]);\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n      }).toDestination();\n    });\n  };\n\n\n  const FilteredSongs : List<any> = state.get('FilteredSongs',List());\n  return(\n    <div>\n      <input  className=\"input-reset ba b--black-20 pa2 mb2 db w-100\" placeholder=\"Enter Song Title\"  value={search} onChange={(value)=>{\n        setSearch(value.target.value);\n      }}></input>\n    <div \n    style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    }}\n    >\n      <div style={{\n        marginTop: '5%',\n      }}>  Search Results by Song Tittle\n      {\n       FilteredSongs !== undefined ?\n       FilteredSongs.map(song=>{\n         return(\n           <div\n           className=\"f6 pointer underline items-center no-underline i dim\"\n            onClick={()=>{\n            dispatch(new DispatchAction('PLAY_SONG', { id: song.get('id') }))\n           }}>\n             {\n               song.get('songTitle')\n             }\n             </div>\n         )\n       }) : null\n\n}\n</div> \n<div style={{\n        marginTop: '5%',\n      }}>\n        Oscillators List\n        {oscillators.map(o => (\n          <div\n          className=\"f6 pointer underline items-center no-underline i dim\"\n          onClick={() => setOscillator(o)}\n          style={{\n            margin: '1%'\n          }}\n          >\n            {\n              o\n            }\n            </div>\n        ))}\n      </div>\n    </div>\n    </div>\n  )\n}\n\n/** ------------------------------------------------------------------------ **\n * Main page component\n ** ------------------------------------------------------------------------ */\n\nexport function MainPage({ state, dispatch }: PanelProps): JSX.Element {\n  /**\n   * This React component bundles together the entire main page.\n   */\n\n  const location = useLocation();\n  const isWelcome = !state.get('instrument');\n  console.log('INSTRUMENT', isWelcome);\n\n  useEffect(() => {\n    dispatch(new DispatchAction('SET_LOCATION', { location }));\n  }, [dispatch, location]);\n\n  return (\n    <div\n      className=\"fixed top-0 left-0 h-100 w-100 bg-white\"\n      onClick={() => Tone.start()}\n    >\n      <SideNav state={state} dispatch={dispatch} />\n      {isWelcome ? (\n        <ShowWelcome state={state} dispatch={dispatch}/>\n      ) : (\n        <InstrumentAndVisualizer state={state} dispatch={dispatch} />\n      )}\n    </div>\n  );\n}\n\n","/Users/kshitiz/CSC-600-Website/src/Reducer.tsx",[],"/Users/kshitiz/CSC-600-Website/src/State.tsx",["70","71","72","73"],"// 3rd party\nimport { List, Map } from 'immutable';\nimport { DrumsInstrument } from './instruments/KshitizSareen';\nimport { WindInstruments } from './instruments/sroy97';\n\n// project dependencies\nimport { PianoInstrument} from './instruments/Piano';\nimport { XylophoneInstrument } from './instruments/JasJahan';\nimport { KalimbaInstrument } from './instruments/thaoHo618';\nimport { WaveformVisualizer } from './visualizers/Waveform';\nimport { BoxVisualizer } from './visualizers/JasJahan_3D';\n\n\nimport { CircleVisualizer } from './visualizers/thaoHo618'; \nimport { EllipticalVisualizer } from './visualizers/sroy97';\nimport { BarCircleVisualizer} from './visualizers/KshitizSareen';\n/** ------------------------------------------------------------------------ **\n * The entire application state is stored in AppState.\n ** ------------------------------------------------------------------------ */\n\n/**\n * Observation: pure map (compare and contrast with impure map)\n *\n * 'instrument': Instrument\n * 'visualizer': Visualizer\n */\nexport type AppState = Map<string, any>;\n\n\nconst instruments = List([PianoInstrument]);\nconst visualizers = List([WaveformVisualizer,CircleVisualizer,EllipticalVisualizer,BarCircleVisualizer,BoxVisualizer]);\nexport const defaultState: AppState = Map<string, any>({\n  instruments,\n  visualizers,\n});\n","/Users/kshitiz/CSC-600-Website/src/Socket.tsx",[],"/Users/kshitiz/CSC-600-Website/src/SideNav.tsx",["74","75"],"// 3rd party library imports\nimport classNames from 'classnames';\nimport { List } from 'immutable';\nimport React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport {\n  RadioButton20,\n  RadioButtonChecked20,\n  Music20,\n} from '@carbon/icons-react';\n\n// project imports\nimport { DispatchAction } from './Reducer';\nimport { AppState } from './State';\nimport { Instrument } from './Instruments';\nimport { Visualizer } from './Visualizers';\nimport { send } from './Socket';\n\n\n/** ------------------------------------------------------------------------ **\n * All the components in the side navigation.\n ** ------------------------------------------------------------------------ */\n\ninterface SideNavProps {\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n}\n\nconst Section: React.FC<{ title: string }> = ({ title, children }) => {\n  return (\n    <div className=\"flex flex-column h-25 bb b--light-gray pa3\">\n      <div className=\"fw7 mb2\">{title} </div>\n      <div className=\"flex-auto overflow-scroll\">{children}</div>\n    </div>\n  );\n};\n\ninterface RadioButtonProps {\n  to: any,\n  text: string,\n  active: boolean,\n  onClick: () => void\n}\n\nfunction RadioButton({ to, text, active, onClick }: RadioButtonProps): JSX.Element {\n  return (\n    <Link to={to} className=\"no-underline\">\n      <div\n        className={classNames('f6 flex items-center black', { fw7: active })}\n        onClick={onClick}\n      >\n        {active ? (\n          <RadioButtonChecked20 className=\"mr1\" />\n        ) : (\n          <RadioButton20 className=\"mr1\" />\n        )}\n        <div className=\"dim\">{text}</div>\n      </div>\n    </Link>\n  );\n}\n\nfunction Instruments({ state }: SideNavProps): JSX.Element {\n  const instruments: List<Instrument> = state.get('instruments');\n  const activeInstrument = state.get('instrument')?.name;\n  const location = useLocation();\n\n  return (\n    <Section title=\"Instruments\">\n      {instruments.map(i => (\n        <RadioButton\n          key={i.name}\n          to={`/${i.name}${location.search}`}\n          text={i.name}\n          active={i.name === activeInstrument}\n          onClick={() => console.log(i.name)}\n        />\n      ))}\n    </Section>\n  );\n}\n\nfunction Visualizers({ state }: SideNavProps): JSX.Element {\n  const visualizers: List<Visualizer> = state.get('visualizers');\n  const activeVisualizer = state.get('visualizer')?.name;\n  const location = useLocation();\n\n  return (\n    <Section title=\"Visualizers\">\n      {visualizers.map(v => (\n        <RadioButton\n          key={v.name}\n          to={{\n            pathname: location.pathname,\n            search: `?visualizer=${v.name}`,\n          }}\n          text={v.name}\n          active={v.name === activeVisualizer}\n          onClick={() => console.log(v.name)}\n        />\n      ))}\n    </Section>\n  );\n}\nexport function SideNav({ state, dispatch }: SideNavProps): JSX.Element {\n  return (\n    <div className=\"absolute top-0 left-0 bottom-0 w5 z-1 shadow-1 bg-white flex flex-column\">\n      <div className=\"h3 fw7 f5 flex items-center pl3 bb b--light-gray\">\n        Music Visualizer\n      </div>\n      <div className=\"flex-auto\" style={{\n        overflow: 'scroll'\n      }}>\n        <Instruments state={state} dispatch={dispatch} />\n        <Visualizers state={state} dispatch={dispatch} />\n      </div>\n    </div>\n  );\n}\n","/Users/kshitiz/CSC-600-Website/src/Instruments.tsx",[],"/Users/kshitiz/CSC-600-Website/src/Visualizers.tsx",[],"/Users/kshitiz/CSC-600-Website/src/visualizers/JasJahan_3D.tsx",[],"/Users/kshitiz/CSC-600-Website/src/visualizers/Waveform.tsx",[],"/Users/kshitiz/CSC-600-Website/src/visualizers/KshitizSareen.tsx",[],"/Users/kshitiz/CSC-600-Website/src/visualizers/thaoHo618.tsx",[],"/Users/kshitiz/CSC-600-Website/src/instruments/Piano.tsx",[],"/Users/kshitiz/CSC-600-Website/src/visualizers/sroy97.tsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":9,"column":28,"nodeType":"82","messageId":"83","endLine":9,"endColumn":32},{"ruleId":"80","severity":1,"message":"84","line":93,"column":10,"nodeType":"82","messageId":"83","endLine":93,"endColumn":19},{"ruleId":"80","severity":1,"message":"85","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":25},{"ruleId":"80","severity":1,"message":"86","line":4,"column":10,"nodeType":"82","messageId":"83","endLine":4,"endColumn":25},{"ruleId":"80","severity":1,"message":"87","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":29},{"ruleId":"80","severity":1,"message":"88","line":9,"column":10,"nodeType":"82","messageId":"83","endLine":9,"endColumn":27},{"ruleId":"80","severity":1,"message":"89","line":9,"column":3,"nodeType":"82","messageId":"83","endLine":9,"endColumn":10},{"ruleId":"80","severity":1,"message":"81","line":17,"column":10,"nodeType":"82","messageId":"83","endLine":17,"endColumn":14},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"@typescript-eslint/no-unused-vars","'send' is defined but never used.","Identifier","unusedVar","'ShowSongs' is defined but never used.","'DrumsInstrument' is defined but never used.","'WindInstruments' is defined but never used.","'XylophoneInstrument' is defined but never used.","'KalimbaInstrument' is defined but never used.","'Music20' is defined but never used.","no-global-assign","no-unsafe-negation"]