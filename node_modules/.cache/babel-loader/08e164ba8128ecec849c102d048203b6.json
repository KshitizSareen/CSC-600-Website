{"ast":null,"code":"/*\n    Author: Jasmine Jahan\n    GitHub Handle: jasjahan\n    JasJahan_3D.tsx: Adding a 3D Shape Visualizer\n*/\nimport { Visualizer } from '../Visualizers';\nexport const BoxVisualizer = new Visualizer('3D Shape', (p5, analyzer) => {\n  const width = window.innerWidth;\n  const height = window.innerHeight / 2;\n  p5.background(\"black\");\n  let values = analyzer.getValue();\n  let locX = p5.mouseX - height / 2;\n  let locY = p5.mouseY - width / 2;\n  p5.ambientLight(50);\n  p5.directionalLight(255, 0, 0, 0.25, 0.25, 0);\n  p5.pointLight(0, 0, 255, locX, locY, 250);\n  p5.beginShape();\n  p5.rotateZ(p5.frameCount * 0.02);\n  p5.rotateX(p5.frameCount * 0.02);\n  p5.specularMaterial(250);\n  p5.translate(-width / 10, 0, 0);\n\n  for (let i = 0; i < values.length; i++) {\n    let amplitude = values[i];\n    let x = p5.map(i, 0, values.length - 1, 0, amplitude * height) + width;\n    let y = height / 2 + amplitude * width + height; // p5.translate(width/15, 0, 0); \n\n    p5.push();\n    p5.box(x * .07, y * .15, 100);\n    p5.pop();\n  }\n\n  p5.endShape();\n});","map":{"version":3,"sources":["/Users/kshitiz/final-project-tornado-main/client/src/visualizers/JasJahan_3D.tsx"],"names":["Visualizer","BoxVisualizer","p5","analyzer","width","window","innerWidth","height","innerHeight","background","values","getValue","locX","mouseX","locY","mouseY","ambientLight","directionalLight","pointLight","beginShape","rotateZ","frameCount","rotateX","specularMaterial","translate","i","length","amplitude","x","map","y","push","box","pop","endShape"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAKA,SAASA,UAAT,QAA2B,gBAA3B;AAEA,OAAO,MAAMC,aAAa,GAAG,IAAID,UAAJ,CACrB,UADqB,EAErB,CAACE,EAAD,EAASC,QAAT,KAAqC;AACnC,QAAMC,KAAK,GAAGC,MAAM,CAACC,UAArB;AACA,QAAMC,MAAM,GAAGF,MAAM,CAACG,WAAP,GAAqB,CAApC;AAEAN,EAAAA,EAAE,CAACO,UAAH,CAAc,OAAd;AACA,MAAIC,MAAM,GAAGP,QAAQ,CAACQ,QAAT,EAAb;AACA,MAAIC,IAAI,GAAGV,EAAE,CAACW,MAAH,GAAYN,MAAM,GAAG,CAAhC;AACA,MAAIO,IAAI,GAAGZ,EAAE,CAACa,MAAH,GAAYX,KAAK,GAAG,CAA/B;AACAF,EAAAA,EAAE,CAACc,YAAH,CAAgB,EAAhB;AACAd,EAAAA,EAAE,CAACe,gBAAH,CAAoB,GAApB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,CAA3C;AACAf,EAAAA,EAAE,CAACgB,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,GAApB,EAAyBN,IAAzB,EAA+BE,IAA/B,EAAqC,GAArC;AAEAZ,EAAAA,EAAE,CAACiB,UAAH;AACAjB,EAAAA,EAAE,CAACkB,OAAH,CAAWlB,EAAE,CAACmB,UAAH,GAAgB,IAA3B;AACAnB,EAAAA,EAAE,CAACoB,OAAH,CAAWpB,EAAE,CAACmB,UAAH,GAAgB,IAA3B;AACAnB,EAAAA,EAAE,CAACqB,gBAAH,CAAoB,GAApB;AACArB,EAAAA,EAAE,CAACsB,SAAH,CAAa,CAACpB,KAAD,GAAQ,EAArB,EAAwB,CAAxB,EAA0B,CAA1B;;AACA,OAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,MAAM,CAACgB,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,QAAIE,SAAS,GAAGjB,MAAM,CAACe,CAAD,CAAtB;AACA,QAAIG,CAAC,GAAG1B,EAAE,CAAC2B,GAAH,CAAOJ,CAAP,EAAU,CAAV,EAAaf,MAAM,CAACgB,MAAP,GAAe,CAA5B,EAA+B,CAA/B,EAAkCC,SAAS,GAAGpB,MAA9C,IAAwDH,KAAhE;AACA,QAAI0B,CAAC,GAAMvB,MAAM,GAAG,CAAT,GAAaoB,SAAS,GAAGvB,KAA5B,GAAqCG,MAA7C,CAHsC,CAItC;;AACAL,IAAAA,EAAE,CAAC6B,IAAH;AACA7B,IAAAA,EAAE,CAAC8B,GAAH,CAAOJ,CAAC,GAAE,GAAV,EAAeE,CAAC,GAAE,GAAlB,EAAwB,GAAxB;AACA5B,IAAAA,EAAE,CAAC+B,GAAH;AACD;;AAEF/B,EAAAA,EAAE,CAACgC,QAAH;AACA,CA9BoB,CAAtB","sourcesContent":["/*\n    Author: Jasmine Jahan\n    GitHub Handle: jasjahan\n    JasJahan_3D.tsx: Adding a 3D Shape Visualizer\n*/\n\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\nimport { Visualizer } from '../Visualizers';\n\nexport const BoxVisualizer = new Visualizer(\n        '3D Shape',\n        (p5: P5, analyzer: Tone.Analyser) => {\n          const width = window.innerWidth;\n          const height = window.innerHeight / 2;\n\n          p5.background(\"black\"); \n          let values = analyzer.getValue();\n          let locX = p5.mouseX - height / 2;\n          let locY = p5.mouseY - width / 2;\n          p5.ambientLight(50);\n          p5.directionalLight(255, 0, 0, 0.25, 0.25, 0);\n          p5.pointLight(0, 0, 255, locX, locY, 250);\n\n          p5.beginShape();     \n          p5.rotateZ(p5.frameCount * 0.02);\n          p5.rotateX(p5.frameCount * 0.02);\n          p5.specularMaterial(250);\n          p5.translate(-width /10,0,0);\n          for (let i = 0; i < values.length; i++) {  \n            let amplitude = values[i] as number;\n            let x = p5.map(i, 0, values.length -1, 0, amplitude * height) + width;\n            let y = (  height / 2 + amplitude * width) + height;     \n            // p5.translate(width/15, 0, 0); \n            p5.push();\n            p5.box(x *.07, y *.15 , 100);\n            p5.pop(); \n          }\n     \n         p5.endShape();\n        } \n        \n      );\n"]},"metadata":{},"sourceType":"module"}