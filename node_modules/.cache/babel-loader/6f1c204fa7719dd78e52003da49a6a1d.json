{"ast":null,"code":"/*\n    Author: Saptarshi Roy\n    GitHub Handle: sroy97\n\n    sroy97.tsx: string waveform visualizer\n*/ // 3rd party library imports\n// project imports\nimport{Visualizer}from'../Visualizers';export var EllipticalVisualizer=new Visualizer('Elliptical Nebular Waveform',function(p5,analyzer){var width=window.innerWidth;var height=window.innerHeight/2;p5.background(0,0,0,210);p5.stroke(255,0,127);p5.strokeWeight(3);p5.noFill();var values=analyzer.getValue();p5.beginShape();values.forEach(function(val,i){var amp=values[i];p5.ellipse(600,200,300+width*amp,150+height*amp);p5.ellipse(600,200,150+height*amp,300+width*amp);});p5.endShape();});","map":{"version":3,"sources":["/Users/kshitiz/final-project-tornado-main/client/src/visualizers/sroy97.tsx"],"names":["Visualizer","EllipticalVisualizer","p5","analyzer","width","window","innerWidth","height","innerHeight","background","stroke","strokeWeight","noFill","values","getValue","beginShape","forEach","val","i","amp","ellipse","endShape"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,E,CAEA;AAIA;AACA,OAASA,UAAT,KAA2B,gBAA3B,CAEA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,GAAID,CAAAA,UAAJ,CAChC,6BADgC,CAEhC,SAACE,EAAD,CAASC,QAAT,CAAqC,CAEjC,GAAMC,CAAAA,KAAK,CAAGC,MAAM,CAACC,UAArB,CACA,GAAMC,CAAAA,MAAM,CAAGF,MAAM,CAACG,WAAP,CAAqB,CAApC,CAEAN,EAAE,CAACO,UAAH,CAAc,CAAd,CAAiB,CAAjB,CAAoB,CAApB,CAAuB,GAAvB,EACAP,EAAE,CAACQ,MAAH,CAAU,GAAV,CAAc,CAAd,CAAgB,GAAhB,EACAR,EAAE,CAACS,YAAH,CAAgB,CAAhB,EACAT,EAAE,CAACU,MAAH,GAEA,GAAMC,CAAAA,MAAM,CAAGV,QAAQ,CAACW,QAAT,EAAf,CAEAZ,EAAE,CAACa,UAAH,GAEAF,MAAM,CAACG,OAAP,CAAe,SAACC,GAAD,CAAMC,CAAN,CAAY,CACzB,GAAMC,CAAAA,GAAG,CAAGN,MAAM,CAACK,CAAD,CAAlB,CACAhB,EAAE,CAACkB,OAAH,CAAW,GAAX,CAAgB,GAAhB,CAAqB,IAAMhB,KAAK,CAAGe,GAAnC,CAAwC,IAAMZ,MAAM,CAAGY,GAAvD,EACAjB,EAAE,CAACkB,OAAH,CAAW,GAAX,CAAgB,GAAhB,CAAqB,IAAMb,MAAM,CAAGY,GAApC,CAAyC,IAAMf,KAAK,CAAGe,GAAvD,EACD,CAJD,EAMAjB,EAAE,CAACmB,QAAH,GAEH,CAxB+B,CAA7B","sourcesContent":["/*\n    Author: Saptarshi Roy\n    GitHub Handle: sroy97\n\n    sroy97.tsx: string waveform visualizer\n*/\n\n// 3rd party library imports\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\n// project imports\nimport { Visualizer } from '../Visualizers';\n\nexport const EllipticalVisualizer = new Visualizer(\n    'Elliptical Nebular Waveform',\n    (p5: P5, analyzer: Tone.Analyser) => {\n    \n        const width = window.innerWidth;\n        const height = window.innerHeight / 2;\n        \n        p5.background(0, 0, 0, 210); \n        p5.stroke(255,0,127);\n        p5.strokeWeight(3) \n        p5.noFill(); \n\n        const values = analyzer.getValue(); \n\n        p5.beginShape();\n\n        values.forEach((val, i) => {\n          const amp = values[i] as number\n          p5.ellipse(600, 200, 300 + width * amp, 150 + height * amp);\n          p5.ellipse(600, 200, 150 + height * amp, 300 + width * amp);\n        });\n\n        p5.endShape();\n\n    },\n  );\n"]},"metadata":{},"sourceType":"module"}