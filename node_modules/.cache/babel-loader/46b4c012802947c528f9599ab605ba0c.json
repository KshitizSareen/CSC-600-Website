{"ast":null,"code":"import _slicedToArray from\"/Users/kshitiz/final-project-tornado-main/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/*\n    Author: Saptarshi Roy\n    Github Handle: sroy97\n */import{useState}from\"react\";import{Instrument}from\"../Instruments\";import\"./WindInstruments.css\";import*as Tone from'tone';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function WindInstrument(){var windIcons=[\"clarinet.png\",\"flute.png\",\"horn.png\",\"oboe.png\",\"piccolo.png\",\"saxophone.png\",\"trombone.png\",\"trumpet.png\",\"tuba.png\"];var tonePlayers=[\"/WindSounds/clarinet.wav\",\"/WindSounds/flute.wav\",\"/WindSounds/horn.wav\",\"/WindSounds/oboe.wav\",\"/WindSounds/piccolo.wav\",\"/WindSounds/sax.wav\",\"/WindSounds/trombone.wav\",\"/WindSounds/trumpet.wav\",\"/WindSounds/tuba.wav\"];var _useState=useState([{volume:1,pitch:10,reverb:0.45,stereo:0.5},{volume:1,pitch:10,reverb:0.45,stereo:0.5},{volume:1,pitch:10,reverb:0.45,stereo:0.5},{volume:1,pitch:10,reverb:0.45,stereo:0.5},{volume:1,pitch:10,reverb:0.45,stereo:0.5},{volume:1,pitch:10,reverb:0.45,stereo:0.5},{volume:1,pitch:10,reverb:0.75,stereo:0.5},{volume:1,pitch:10,reverb:0.75,stereo:0.5},{volume:1,pitch:10,reverb:0.75,stereo:0.5}]),_useState2=_slicedToArray(_useState,2),properties=_useState2[0],setProperties=_useState2[1];function PlaySound(index){var tonePlayer=new Tone.Player(tonePlayers[index]);tonePlayer.autostart=true;if(properties[index].volume===0){tonePlayer.mute=true;}else{tonePlayer.mute=false;tonePlayer.volume.value=properties[index].volume;}if(properties[index].pitch!==0){// const pitchShift = new Tone.PitchShift({ pitch: -5 }).toMaster();\nvar pitch=new Tone.PitchShift(properties[index].pitch).toDestination();tonePlayer.connect(pitch);}if(properties[index].reverb!==0){var Reverb=new Tone.Reverb(properties[index].reverb).toDestination();tonePlayer.connect(Reverb);}if(properties[index].stereo>=0){var Stereo=new Tone.StereoWidener(properties[index].stereo).toDestination();tonePlayer.connect(Stereo);}tonePlayer.toDestination();}return/*#__PURE__*/_jsx(\"body\",{tabIndex:0,children:/*#__PURE__*/_jsx(\"div\",{className:\"windkit\",children:windIcons.map(function(icon,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"instrumentcontainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"windinstrument\",onClick:function onClick(){PlaySound(index);},children:/*#__PURE__*/_jsx(\"img\",{className:\"icon\",src:\"/WindIcons/\"+icon,alt:\"\"})}),/*#__PURE__*/_jsx(\"label\",{children:\"Volume\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"10\",value:properties[index].volume,onChange:function onChange(value){setProperties(properties.map(function(property,propertyIndex){if(propertyIndex===index){property.volume=Number.parseInt(value.target.value);}return property;}));}}),/*#__PURE__*/_jsx(\"label\",{children:\"Pitch\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"10\",value:properties[index].pitch,onChange:function onChange(value){setProperties(properties.map(function(property,propertyIndex){if(propertyIndex===index){property.pitch=Number.parseInt(value.target.value);}return property;}));}}),/*#__PURE__*/_jsx(\"label\",{children:\"Reverb\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"10\",value:properties[index].reverb,onChange:function onChange(value){setProperties(properties.map(function(property,propertyIndex){if(propertyIndex===index){property.reverb=Number.parseInt(value.target.value);}return property;}));}}),/*#__PURE__*/_jsx(\"label\",{children:\"Stereo\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",step:1,max:\"2\",value:properties[index].stereo,onChange:function onChange(value){setProperties(properties.map(function(property,propertyIndex){if(propertyIndex===index){property.stereo=Number.parseInt(value.target.value);}return property;}));}})]});})})});};export var WindInstruments=new Instrument(\"Wind Family\",WindInstrument);","map":{"version":3,"sources":["/Users/kshitiz/final-project-tornado-main/client/src/instruments/sroy97.tsx"],"names":["useState","Instrument","Tone","WindInstrument","windIcons","tonePlayers","volume","pitch","reverb","stereo","properties","setProperties","PlaySound","index","tonePlayer","Player","autostart","mute","value","PitchShift","toDestination","connect","Reverb","Stereo","StereoWidener","map","icon","property","propertyIndex","Number","parseInt","target","WindInstruments"],"mappings":"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","sourcesContent":["/*\n    Author: Saptarshi Roy\n    Github Handle: sroy97\n */\n\nimport {useState}  from \"react\";\nimport { Instrument } from \"../Instruments\";\nimport \"./WindInstruments.css\";\nimport * as Tone from 'tone';\nfunction WindInstrument()\n{\n    const windIcons =[\"clarinet.png\",\n                      \"flute.png\",\n                      \"horn.png\",\n                      \"oboe.png\",\n                      \"piccolo.png\",\n                      \"saxophone.png\",\n                      \"trombone.png\",\n                      \"trumpet.png\",\n                      \"tuba.png\"]\n\n    const tonePlayers=[\"/WindSounds/clarinet.wav\",\n                       \"/WindSounds/flute.wav\",\n                       \"/WindSounds/horn.wav\",\n                       \"/WindSounds/oboe.wav\",\n                       \"/WindSounds/piccolo.wav\",\n                       \"/WindSounds/sax.wav\",\n                       \"/WindSounds/trombone.wav\",\n                       \"/WindSounds/trumpet.wav\",\n                       \"/WindSounds/tuba.wav\"]\n\n    const [properties,setProperties] = useState([{\n        volume: 1,\n        pitch: 10,\n        reverb: 0.45,\n        stereo: 0.5\n    },{\n        volume: 1,\n        pitch: 10,\n        reverb: 0.45,\n        stereo: 0.5\n    },\n    {\n        volume: 1,\n        pitch: 10,\n        reverb: 0.45,\n        stereo: 0.5\n    },\n    {\n        volume: 1,\n        pitch: 10,\n        reverb: 0.45,\n        stereo: 0.5\n    },\n    {\n        volume: 1,\n        pitch: 10,\n        reverb: 0.45,\n        stereo: 0.5\n    },\n    {\n        volume: 1,\n        pitch: 10,\n        reverb: 0.45,\n        stereo: 0.5\n    },\n    {\n        volume: 1,\n        pitch: 10,\n        reverb: 0.75,\n        stereo: 0.5\n    },\n    {\n        volume: 1,\n        pitch: 10,\n        reverb: 0.75,\n        stereo: 0.5\n    },\n    {\n        volume: 1,\n        pitch: 10,\n        reverb: 0.75,\n        stereo: 0.5\n    }])\n            \n    function PlaySound(index: any) : void\n    {\n        const tonePlayer = new Tone.Player(tonePlayers[index]);\n        tonePlayer.autostart=true;\n        if(properties[index].volume===0)\n        {\n            tonePlayer.mute=true;\n        }\n        else\n        {\n            tonePlayer.mute=false;\n            tonePlayer.volume.value=properties[index].volume;\n        }\n        \n        if (properties[index].pitch!==0)\n        {\n         // const pitchShift = new Tone.PitchShift({ pitch: -5 }).toMaster();\n            const pitch = new Tone.PitchShift(properties[index].pitch).toDestination();\n            tonePlayer.connect(pitch);\n        }\n\n        if(properties[index].reverb!==0)\n        {\n            const Reverb = new Tone.Reverb(properties[index].reverb).toDestination();\n            tonePlayer.connect(Reverb);\n        }\n\n        if(properties[index].stereo>=0)\n        {\n            const Stereo = new Tone.StereoWidener(properties[index].stereo).toDestination();\n            tonePlayer.connect(Stereo);\n        }\n\n        tonePlayer.toDestination();\n    }\n\n    return(\n        <body tabIndex={0}>\n        <div className=\"windkit\">\n            {\n                        windIcons.map((icon,index)=>{\n                            return(\n                                <div className=\"instrumentcontainer\">\n                <div className=\"windinstrument\"  onClick={()=>{\n                    PlaySound(index);\n                }}>\n                    <img className=\"icon\" src={\"/WindIcons/\"+icon} alt=\"\"/>\n                </div>\n                    <label>Volume</label>\n                    <input type=\"range\" min=\"0\" max=\"10\" value={properties[index].volume} onChange={(value)=>{\n                        setProperties(properties.map((property,propertyIndex)=>{\n                            if(propertyIndex===index)\n                            {\n                            property.volume=Number.parseInt(value.target.value)\n                            }\n                            return(\n                                property\n                            )\n                        }))\n                    }}/>\n                    <label>Pitch</label>\n                    <input type=\"range\" min=\"0\" max=\"10\" value={properties[index].pitch} onChange={(value)=>{\n                        setProperties(properties.map((property,propertyIndex)=>{\n                            if(propertyIndex===index)\n                            {\n                            property.pitch=Number.parseInt(value.target.value)\n                            }\n                            return(\n                                property\n                            )\n                        }))\n                    }}/>\n                    <label>Reverb</label>\n                    <input type=\"range\" min=\"0\" max=\"10\" value={properties[index].reverb} onChange={(value)=>{\n                        setProperties(properties.map((property,propertyIndex)=>{\n                            if(propertyIndex===index)\n                            {\n                            property.reverb=Number.parseInt(value.target.value)\n                            }\n                            return(\n                                property\n                            )\n                        }))\n                    }}/>\n                    <label>Stereo</label>\n                    <input type=\"range\" min=\"0\" step={1} max=\"2\" value={properties[index].stereo} onChange={(value)=>{\n                        setProperties(properties.map((property,propertyIndex)=>{\n                            if(propertyIndex===index)\n                            {\n                            property.stereo=Number.parseInt(value.target.value);\n                            }\n                            return(\n                                property\n                            )\n                        }))\n                    }}/>\n                    </div>\n                            )\n                        })\n                    }\n            </div>\n        </body>\n    )\n};\n\nexport const WindInstruments = new Instrument(\"Wind Family\",WindInstrument);\n"]},"metadata":{},"sourceType":"module"}