{"ast":null,"code":"var _jsxFileName = \"/Users/kshitiz/CSC-600-Website/src/SideNav.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// 3rd party library imports\nimport classNames from 'classnames';\nimport { List } from 'immutable';\nimport React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { RadioButton20, RadioButtonChecked20, Music20 } from '@carbon/icons-react'; // project imports\n\nimport { DispatchAction } from './Reducer';\nimport { send } from './Socket';\n/** ------------------------------------------------------------------------ **\n * All the components in the side navigation.\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Section = ({\n  title,\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-column h-25 bb b--light-gray pa3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fw7 mb2\",\n      children: [title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-auto overflow-scroll\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Section;\n\nfunction RadioButton({\n  to,\n  text,\n  active,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: to,\n    className: \"no-underline\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames('f6 flex items-center black', {\n        fw7: active\n      }),\n      onClick: onClick,\n      children: [active ? /*#__PURE__*/_jsxDEV(RadioButtonChecked20, {\n        className: \"mr1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(RadioButton20, {\n        className: \"mr1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dim\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = RadioButton;\n\nfunction Instruments({\n  state\n}) {\n  _s();\n\n  var _state$get;\n\n  const instruments = state.get('instruments');\n  const activeInstrument = (_state$get = state.get('instrument')) === null || _state$get === void 0 ? void 0 : _state$get.name;\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Instruments\",\n    children: instruments.map(i => /*#__PURE__*/_jsxDEV(RadioButton, {\n      to: `/${i.name}${location.search}`,\n      text: i.name,\n      active: i.name === activeInstrument,\n      onClick: () => console.log(i.name)\n    }, i.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Instruments, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c3 = Instruments;\n\nfunction Visualizers({\n  state\n}) {\n  _s2();\n\n  var _state$get2;\n\n  const visualizers = state.get('visualizers');\n  const activeVisualizer = (_state$get2 = state.get('visualizer')) === null || _state$get2 === void 0 ? void 0 : _state$get2.name;\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Visualizers\",\n    children: visualizers.map(v => /*#__PURE__*/_jsxDEV(RadioButton, {\n      to: {\n        pathname: location.pathname,\n        search: `?visualizer=${v.name}`\n      },\n      text: v.name,\n      active: v.name === activeVisualizer,\n      onClick: () => console.log(v.name)\n    }, v.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Visualizers, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c4 = Visualizers;\n\nfunction Songs({\n  state,\n  dispatch\n}) {\n  async function setSongDetails(song) {\n    const socket = state.get('socket');\n    const {\n      SongDetails\n    } = await send(socket, 'get_song_details', {});\n    const songGenre = song.get('fkGenreid');\n    const songAlbum = song.get('fkAlbumid');\n    const songArtist = song.get('fkArtistid');\n    let genre = \"\";\n    let album = \"\";\n    let artist = \"\";\n\n    for (let i = 0; i < SongDetails.length; i++) {\n      if (SongDetails[i].genreId === songGenre) {\n        genre = SongDetails[i].genreDescription;\n      }\n\n      if (SongDetails[i].albumId === songAlbum) {\n        album = SongDetails[i].albumTitle;\n      }\n\n      if (SongDetails[i].artistId === songArtist) {\n        artist = SongDetails[i].artistName;\n      }\n    }\n\n    const SongDetail = {\n      genre: genre,\n      album: album,\n      artist: artist\n    };\n    dispatch(new DispatchAction('SHOW_SONG_DETAILS', {\n      SongDetail\n    }));\n  }\n\n  const songs = state.get('songs', List());\n  return /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Playlist\",\n    children: songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"f6 pointer underline flex items-center no-underline i dim\",\n      onClick: async () => {\n        dispatch(new DispatchAction('PLAY_SONG', {\n          id: song.get('id')\n        }));\n        setSongDetails(song);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Music20, {\n        className: \"mr1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), song.get('songTitle')]\n    }, song.get('id'), true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = Songs;\n\nfunction SongDetails({\n  state,\n  dispatch\n}) {\n  const SongDetail = state.get('SongDetail');\n  return /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Song Details\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: SongDetail !== undefined ? SongDetail.get('genre') : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: SongDetail !== undefined ? SongDetail.get('album') : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: SongDetail !== undefined ? SongDetail.get('artist') : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n\n_c6 = SongDetails;\n\nfunction Albums({\n  state,\n  dispatch\n}) {\n  const Albums = state.get('Albums', List());\n  return /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Albums\",\n    children: Albums.map((album, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"f6 pointer underline items-center no-underline i dim\",\n        onClick: () => {\n          dispatch(new DispatchAction('SET_ALBUM_SONGS', {\n            index,\n            Albums\n          }));\n        },\n        children: album.get('albumTitle')\n      }, album.get('albumID'), false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n\n_c7 = Albums;\n\nfunction Genres({\n  state,\n  dispatch\n}) {\n  const Genres = state.get('Genres', List());\n  return /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Genres\",\n    children: Genres.map((genre, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"f6 pointer underline items-center no-underline i dim\",\n        onClick: () => {\n          dispatch(new DispatchAction('SET_GENRE_SONGS', {\n            index,\n            Genres\n          }));\n        },\n        children: genre.get('genreDescription')\n      }, genre.get('genreId'), false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n\n_c8 = Genres;\nexport function SideNav({\n  state,\n  dispatch\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute top-0 left-0 bottom-0 w5 z-1 shadow-1 bg-white flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h3 fw7 f5 flex items-center pl3 bb b--light-gray\",\n      children: \"Nameless App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-auto\",\n      style: {\n        overflow: 'scroll'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Instruments, {\n        state: state,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Visualizers, {\n        state: state,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Songs, {\n        state: state,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SongDetails, {\n        state: state,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Albums, {\n        state: state,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Genres, {\n        state: state,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n}\n_c9 = SideNav;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"RadioButton\");\n$RefreshReg$(_c3, \"Instruments\");\n$RefreshReg$(_c4, \"Visualizers\");\n$RefreshReg$(_c5, \"Songs\");\n$RefreshReg$(_c6, \"SongDetails\");\n$RefreshReg$(_c7, \"Albums\");\n$RefreshReg$(_c8, \"Genres\");\n$RefreshReg$(_c9, \"SideNav\");","map":{"version":3,"sources":["/Users/kshitiz/CSC-600-Website/src/SideNav.tsx"],"names":["classNames","List","React","useLocation","Link","RadioButton20","RadioButtonChecked20","Music20","DispatchAction","send","Section","title","children","RadioButton","to","text","active","onClick","fw7","Instruments","state","instruments","get","activeInstrument","name","location","map","i","search","console","log","Visualizers","visualizers","activeVisualizer","v","pathname","Songs","dispatch","setSongDetails","song","socket","SongDetails","songGenre","songAlbum","songArtist","genre","album","artist","length","genreId","genreDescription","albumId","albumTitle","artistId","artistName","SongDetail","songs","id","undefined","Albums","index","Genres","SideNav","overflow"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport classNames from 'classnames';\nimport { List } from 'immutable';\nimport React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport {\n  RadioButton20,\n  RadioButtonChecked20,\n  Music20,\n} from '@carbon/icons-react';\n\n// project imports\nimport { DispatchAction } from './Reducer';\nimport { AppState } from './State';\nimport { Instrument } from './Instruments';\nimport { Visualizer } from './Visualizers';\nimport { send } from './Socket';\n\n\n/** ------------------------------------------------------------------------ **\n * All the components in the side navigation.\n ** ------------------------------------------------------------------------ */\n\ninterface SideNavProps {\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n}\n\nconst Section: React.FC<{ title: string }> = ({ title, children }) => {\n  return (\n    <div className=\"flex flex-column h-25 bb b--light-gray pa3\">\n      <div className=\"fw7 mb2\">{title} </div>\n      <div className=\"flex-auto overflow-scroll\">{children}</div>\n    </div>\n  );\n};\n\ninterface RadioButtonProps {\n  to: any,\n  text: string,\n  active: boolean,\n  onClick: () => void\n}\n\nfunction RadioButton({ to, text, active, onClick }: RadioButtonProps): JSX.Element {\n  return (\n    <Link to={to} className=\"no-underline\">\n      <div\n        className={classNames('f6 flex items-center black', { fw7: active })}\n        onClick={onClick}\n      >\n        {active ? (\n          <RadioButtonChecked20 className=\"mr1\" />\n        ) : (\n          <RadioButton20 className=\"mr1\" />\n        )}\n        <div className=\"dim\">{text}</div>\n      </div>\n    </Link>\n  );\n}\n\nfunction Instruments({ state }: SideNavProps): JSX.Element {\n  const instruments: List<Instrument> = state.get('instruments');\n  const activeInstrument = state.get('instrument')?.name;\n  const location = useLocation();\n\n  return (\n    <Section title=\"Instruments\">\n      {instruments.map(i => (\n        <RadioButton\n          key={i.name}\n          to={`/${i.name}${location.search}`}\n          text={i.name}\n          active={i.name === activeInstrument}\n          onClick={() => console.log(i.name)}\n        />\n      ))}\n    </Section>\n  );\n}\n\nfunction Visualizers({ state }: SideNavProps): JSX.Element {\n  const visualizers: List<Visualizer> = state.get('visualizers');\n  const activeVisualizer = state.get('visualizer')?.name;\n  const location = useLocation();\n\n  return (\n    <Section title=\"Visualizers\">\n      {visualizers.map(v => (\n        <RadioButton\n          key={v.name}\n          to={{\n            pathname: location.pathname,\n            search: `?visualizer=${v.name}`,\n          }}\n          text={v.name}\n          active={v.name === activeVisualizer}\n          onClick={() => console.log(v.name)}\n        />\n      ))}\n    </Section>\n  );\n}\n\nfunction Songs({ state, dispatch }: SideNavProps): JSX.Element {\n\n  async function setSongDetails(song: { get: (arg0: string) => any; })\n  {\n    const socket = state.get('socket');\n            const {SongDetails}  = await send(socket,'get_song_details',{});\n            const songGenre=song.get('fkGenreid');\n            const songAlbum=song.get('fkAlbumid');\n            const songArtist=song.get('fkArtistid');\n            let genre : string = \"\";\n            let album : string = \"\";\n            let artist: string = \"\";\n            for(let i=0;i<SongDetails.length;i++)\n            {\n              if(SongDetails[i].genreId===songGenre)\n              {\n                genre=SongDetails[i].genreDescription;\n              }\n              if(SongDetails[i].albumId===songAlbum)\n              {\n                album=SongDetails[i].albumTitle;\n              }\n              if(SongDetails[i].artistId===songArtist)\n              {\n                artist=SongDetails[i].artistName;\n              } \n            }\n            const SongDetail={\n              genre: genre,\n              album: album,\n              artist: artist\n            }\n            dispatch(new DispatchAction('SHOW_SONG_DETAILS',{SongDetail}));\n  }\n\n  const songs: List<any> = state.get('songs', List());\n  return (\n    <Section title=\"Playlist\">\n      {songs.map(song => (\n        <div\n          key={song.get('id')}\n          className=\"f6 pointer underline flex items-center no-underline i dim\"\n          onClick={async () =>\n            {\n            dispatch(new DispatchAction('PLAY_SONG', { id: song.get('id') }))\n            setSongDetails(song);\n            }\n          }\n        >\n          <Music20 className=\"mr1\" />\n          {song.get('songTitle')}\n        </div>\n      ))}\n    </Section>\n  );\n}\n\nfunction SongDetails({state,dispatch} : SideNavProps) : JSX.Element{\n\n  const SongDetail= state.get('SongDetail');\n  return(\n    <Section title=\"Song Details\">\n      <div>\n      {\n        SongDetail!==undefined ? SongDetail.get('genre') : \"\"\n      }\n      </div>\n      <div>\n      {\n        SongDetail!==undefined ? SongDetail.get('album') : \"\"\n      }\n      </div>\n      <div>\n      {\n        SongDetail!==undefined ? SongDetail.get('artist') : \"\"\n      }\n      </div>\n    </Section>\n  )\n}\n\nfunction Albums({state,dispatch} : SideNavProps) : JSX.Element\n{\n  const Albums : List<any> = state.get('Albums',List());\n  return(\n    <Section title=\"Albums\">\n      {\n        Albums.map((album,index)=>{\n          return(\n            <div \n            key={album.get('albumID')}\n            className=\"f6 pointer underline items-center no-underline i dim\"\n            onClick={()=>{\n              dispatch(new DispatchAction('SET_ALBUM_SONGS',{index,Albums}));\n            }}\n            >\n              {\n              album.get('albumTitle')\n              }\n            </div>\n\n          )\n        })\n      }\n    </Section>\n  )\n}\n\nfunction Genres({state,dispatch} : SideNavProps) : JSX.Element\n{\n  const Genres : List<any> = state.get('Genres',List());\n  return(\n    <Section title=\"Genres\">\n      {\n        Genres.map((genre,index)=>{\n          return(\n            <div \n            key={genre.get('genreId')}\n            className=\"f6 pointer underline items-center no-underline i dim\"\n            onClick={()=>{\n              dispatch(new DispatchAction('SET_GENRE_SONGS',{index,Genres}));\n            }}\n            >\n              {\n              genre.get('genreDescription')\n              }\n            </div>\n\n          )\n        })\n      }\n    </Section>\n  )\n}\n\nexport function SideNav({ state, dispatch }: SideNavProps): JSX.Element {\n  return (\n    <div className=\"absolute top-0 left-0 bottom-0 w5 z-1 shadow-1 bg-white flex flex-column\">\n      <div className=\"h3 fw7 f5 flex items-center pl3 bb b--light-gray\">\n        Nameless App\n      </div>\n      <div className=\"flex-auto\" style={{\n        overflow: 'scroll'\n      }}>\n        <Instruments state={state} dispatch={dispatch} />\n        <Visualizers state={state} dispatch={dispatch} />\n        <Songs state={state} dispatch={dispatch} />\n        <SongDetails state={state} dispatch={dispatch} />\n        <Albums state={state} dispatch={dispatch} />\n        <Genres state={state} dispatch={dispatch} />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}