{"version":3,"sources":["Reducer.tsx","Instruments.tsx","SideNav.tsx","Visualizers.tsx","MainPage.tsx","instruments/Piano.tsx","visualizers/Waveform.tsx","visualizers/JasJahan_3D.tsx","visualizers/thaoHo618.tsx","visualizers/sroy97.tsx","visualizers/KshitizSareen.tsx","State.tsx","Socket.tsx","App.tsx","index.tsx"],"names":["DispatchAction","type","args","this","fromJS","appReducer","state","action","console","debug","newState","oldSocket","get","close","set","delete","songs","notes","find","s","pathname","getIn","search","instrumentName","substring","visualizerName","URLSearchParams","instruments","visualizers","instrument","i","name","visualizer","v","SongDetail","Albums","List","index","Number","Genres","SearchText","String","FilteredSongs","forEach","song","toLowerCase","trim","includes","push","error","toJS","update","TopNav","className","InstrumentContainer","dispatch","InstrumentComponent","component","useState","Tone","oscillator","toDestination","synth","setSynth","useEffect","eachNote","split","noteObjs","map","note","idx","time","velocity","value","triggerAttackRelease","length","start","cancel","style","top","Section","title","children","RadioButton","to","text","active","onClick","classNames","fw7","Instruments","activeInstrument","location","useLocation","log","Visualizers","activeVisualizer","SideNav","overflow","Visualizer","draw","VisualizerContainer","analyzer","useMemo","onResize","useCallback","p5","width","window","innerWidth","height","innerHeight","resizeCanvas","volume","connect","disconnect","setup","canvasParentRef","createCanvas","parent","WEBGL","windowResized","InstrumentPanel","VisualizerPanel","InstrumentAndVisualizer","left","ShowWelcome","MainPage","isWelcome","PianoKey","minor","onMouseDown","triggerAttack","onMouseUp","triggerRelease","zIndex","marginLeft","PianoType","PianoInstrument","keys","oscillators","Range","octave","key","isMinor","indexOf","o","newType","oldSynth","WaveformVisualizer","dim","Math","min","background","strokeWeight","stroke","noFill","values","getValue","beginShape","amplitude","x","y","vertex","endShape","BoxVisualizer","locX","mouseX","locY","mouseY","ambientLight","directionalLight","pointLight","rotateZ","frameCount","rotateX","specularMaterial","translate","box","pop","CircleVisualizer","angleMode","floor","r","sin","cos","EllipticalVisualizer","val","amp","ellipse","BarCircleVisualizer","rotateY","startx","starty","startz","sphere","defaultState","Map","SOCKET_OPTS","transports","path","autoConnect","reconnection","timeout","App","useReducer","onConnect","onDisconnect","socket","newSocket","on","initializeSocket","rootEl","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1ebbdda6.chunk.js","sourcesContent":["// 3rd party\nimport { List, Map, fromJS } from 'immutable';\n\n// project deps\nimport { Instrument } from './Instruments';\nimport { Visualizer } from './Visualizers';\nimport { AppState } from './State';\n\n/** ------------------------------------------------------------------------ **\n * All user input is handled by DispatchAction.\n ** ------------------------------------------------------------------------ */\n\n/**\n * Observation: pure map (compare and contrast with impure map)\n *\n * 'instrument': Instrument\n * 'visualizer': Visualizer\n * 'songs': List<string>\n * 'notes': List<{id: number, songTitle: string, notes: string}>\n */\ntype DispatchArgs = {\n  [key: string]: any;\n};\n\n// A simple algebraic data-type with string literal types\ntype DispatchActionType =\n  | 'SET_SOCKET'\n  | 'DELETE_SOCKET'\n  | 'SET_SONGS'\n  | 'PLAY_SONG'\n  | 'STOP_SONG'\n  | 'SET_LOCATION'\n  | 'SHOW_SONG_DETAILS' \n  | 'SET_ALBUMS'\n  | 'SET_ALBUM_SONGS'\n  | 'SET_GENRES'\n  | 'SET_GENRE_SONGS'\n  | 'SEARCH_SONGS';\n\nexport class DispatchAction {\n  readonly type: DispatchActionType;\n  readonly args: Map<string, any>;\n\n  constructor(type: DispatchActionType, args?: DispatchArgs) {\n    this.type = type;\n    this.args = fromJS(args) as Map<string, any>;\n  }\n}\n\n/** ------------------------------------------------------------------------ **\n * Top-level application reducer.\n ** ------------------------------------------------------------------------ */\n\nexport function appReducer(state: AppState, action: DispatchAction): AppState {\n  const { type, args } = action;\n\n  console.debug(`${type}`);\n\n  // Question: Does this function remind of you registering callbacks?\n  const newState = (() => {\n    switch (type) {\n      case 'SET_SOCKET': {\n        const oldSocket = state.get('socket');\n        if (oldSocket) {\n          oldSocket.close();\n        }\n\n        return state.set('socket', args.get('socket'));\n      }\n      case 'DELETE_SOCKET': {\n        return state.delete('socket');\n      }\n      case 'SET_SONGS': {\n        const songs = args.get('songs');\n        return state.set('songs', songs);\n      }\n      case 'PLAY_SONG': {\n        const notes = state\n          .get('songs')\n          .find((s: any) => s.get('id') === args.get('id'))\n          .get('notes');\n        return state.set('notes', notes);\n      }\n      case 'STOP_SONG': {\n        return state.delete('notes');\n      }\n      case 'SET_LOCATION': {\n        const pathname = args.getIn(['location', 'pathname'], '') as string;\n        const search = args.getIn(['location', 'search'], '') as string;\n\n        const instrumentName: string = pathname.substring(1);\n        const visualizerName: string =\n          new URLSearchParams(search.substring(1)).get('visualizer') ?? '';\n        const instruments: List<Instrument> = state.get('instruments');\n        const visualizers: List<Visualizer> = state.get('visualizers');\n\n        const instrument = instruments.find(i => i.name === instrumentName);\n        const visualizer = visualizers.find(v => v.name === visualizerName);\n\n        return state\n          .set('instrument', instrument)\n          .set('visualizer', visualizer);\n      }\n\n      case 'SHOW_SONG_DETAILS':{\n        const SongDetail = args.get('SongDetail');\n        return state.set('SongDetail',SongDetail);\n      }\n\n      case 'SET_ALBUMS':{\n        let Albums : List<any> = args.get('albums',List());\n        return state.set('Albums',Albums);\n      }\n\n      case 'SET_ALBUM_SONGS':{\n        let Albums : List<any> =args.get('Albums',List())\n        let index : number = args.get('index',Number);\n        return state.set('FilteredSongs',Albums.get(index).get('songs'));\n      }\n\n      case 'SET_GENRES':{\n        let Genres : List<any> = args.get('genres',List());\n        return state.set('Genres',Genres);\n      }\n\n      case 'SET_GENRE_SONGS':{\n        let Genres : List<any> = args.get('Genres',List());\n        let index: number = args.get('index',Number);\n        return state.set('FilteredSongs',Genres.get(index).get('songs'));\n      }\n\n      case 'SEARCH_SONGS':{\n        let SearchText : String = args.get('search',String());\n        let songs : List<any> = args.get('songs',List());\n        let FilteredSongs : any[] = [];\n        songs.forEach(song=>{\n          let songTitle : String = song.get('songTitle').toLowerCase().trim();\n          if(songTitle.includes(SearchText.toLowerCase().trim()))\n          {\n            FilteredSongs.push(song);\n          }\n        })\n        return state.set('FilteredSongs',FilteredSongs);\n      }\n\n      default:\n        console.error(`type unknown: ${type}\\n`, args.toJS());\n        return state;\n    }\n  })();\n\n  console.debug(newState.update('socket', s => (s ? '[socket]' : s)).toJS());\n\n  return newState;\n}\n","// 3rd party library imports\nimport React, { useState, useEffect } from 'react';\nimport * as Tone from 'tone';\n\n// project imports\nimport { DispatchAction } from './Reducer';\nimport { AppState } from './State';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of an Instruments.\n ** ------------------------------------------------------------------------ */\n\nexport interface InstrumentProps {\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n  name: string;\n  synth: Tone.Synth;\n  setSynth: (f: (oldSynth: Tone.Synth) => Tone.Synth) => void;\n}\n\nexport class Instrument {\n  public readonly name: string;\n  public readonly component: React.FC<InstrumentProps>;\n\n  constructor(name: string, component: React.FC<InstrumentProps>) {\n    this.name = name;\n    this.component = component;\n  }\n}\n\nfunction TopNav({ name }: { name: string }) {\n  return (\n    <div\n      className={\n        'w-100 h3 bb b--light-gray flex justify-between items-center ph4'\n      }\n    >\n      <div>{name}</div>\n    </div>\n  );\n}\n\ninterface InstrumentContainerProps {\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n  instrument: Instrument;\n}\n\nexport const InstrumentContainer: React.FC<InstrumentContainerProps> = ({\n  instrument,\n  state,\n  dispatch,\n}: InstrumentContainerProps) => {\n  const InstrumentComponent = instrument.component;\n  const [synth, setSynth] = useState(\n    new Tone.Synth({\n      oscillator: { type: 'sine' } as Tone.OmniOscillatorOptions,\n    }).toDestination(),\n  );\n\n  const notes = state.get('notes');\n\n  useEffect(() => {\n    if (notes && synth) {\n      let eachNote = notes.split(' ');\n      let noteObjs = eachNote.map((note: string, idx: number) => ({\n        idx,\n        time: `+${idx / 4}`,\n        note,\n        velocity: 1,\n      }));\n\n      new Tone.Part((time, value) => {\n        // the value is an object which contains both the note and the velocity\n        synth.triggerAttackRelease(value.note, '4n', time, value.velocity);\n        if (value.idx === eachNote.length - 1) {\n          dispatch(new DispatchAction('STOP_SONG'));\n        }\n      }, noteObjs).start(0);\n\n      Tone.Transport.start();\n\n      return () => {\n        Tone.Transport.cancel();\n      };\n    }\n\n    return () => {};\n  }, [notes, synth, dispatch]);\n\n  return (\n    <div>\n      <TopNav name={instrument.name} />\n      <div\n        className={'bg-white absolute right-0 left-0'}\n        style={{ top: '4rem' }}\n      >\n        <InstrumentComponent\n          name={instrument.name}\n          state={state}\n          dispatch={dispatch}\n          synth={synth}\n          setSynth={setSynth}\n        />\n      </div>\n    </div>\n  );\n};\n","// 3rd party library imports\nimport classNames from 'classnames';\nimport { List } from 'immutable';\nimport React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport {\n  RadioButton20,\n  RadioButtonChecked20,\n  Music20,\n} from '@carbon/icons-react';\n\n// project imports\nimport { DispatchAction } from './Reducer';\nimport { AppState } from './State';\nimport { Instrument } from './Instruments';\nimport { Visualizer } from './Visualizers';\nimport { send } from './Socket';\n\n\n/** ------------------------------------------------------------------------ **\n * All the components in the side navigation.\n ** ------------------------------------------------------------------------ */\n\ninterface SideNavProps {\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n}\n\nconst Section: React.FC<{ title: string }> = ({ title, children }) => {\n  return (\n    <div className=\"flex flex-column h-25 bb b--light-gray pa3\">\n      <div className=\"fw7 mb2\">{title} </div>\n      <div className=\"flex-auto overflow-scroll\">{children}</div>\n    </div>\n  );\n};\n\ninterface RadioButtonProps {\n  to: any,\n  text: string,\n  active: boolean,\n  onClick: () => void\n}\n\nfunction RadioButton({ to, text, active, onClick }: RadioButtonProps): JSX.Element {\n  return (\n    <Link to={to} className=\"no-underline\">\n      <div\n        className={classNames('f6 flex items-center black', { fw7: active })}\n        onClick={onClick}\n      >\n        {active ? (\n          <RadioButtonChecked20 className=\"mr1\" />\n        ) : (\n          <RadioButton20 className=\"mr1\" />\n        )}\n        <div className=\"dim\">{text}</div>\n      </div>\n    </Link>\n  );\n}\n\nfunction Instruments({ state }: SideNavProps): JSX.Element {\n  const instruments: List<Instrument> = state.get('instruments');\n  const activeInstrument = state.get('instrument')?.name;\n  const location = useLocation();\n\n  return (\n    <Section title=\"Instruments\">\n      {instruments.map(i => (\n        <RadioButton\n          key={i.name}\n          to={`/${i.name}${location.search}`}\n          text={i.name}\n          active={i.name === activeInstrument}\n          onClick={() => console.log(i.name)}\n        />\n      ))}\n    </Section>\n  );\n}\n\nfunction Visualizers({ state }: SideNavProps): JSX.Element {\n  const visualizers: List<Visualizer> = state.get('visualizers');\n  const activeVisualizer = state.get('visualizer')?.name;\n  const location = useLocation();\n\n  return (\n    <Section title=\"Visualizers\">\n      {visualizers.map(v => (\n        <RadioButton\n          key={v.name}\n          to={{\n            pathname: location.pathname,\n            search: `?visualizer=${v.name}`,\n          }}\n          text={v.name}\n          active={v.name === activeVisualizer}\n          onClick={() => console.log(v.name)}\n        />\n      ))}\n    </Section>\n  );\n}\nexport function SideNav({ state, dispatch }: SideNavProps): JSX.Element {\n  return (\n    <div className=\"absolute top-0 left-0 bottom-0 w5 z-1 shadow-1 bg-white flex flex-column\">\n      <div className=\"h3 fw7 f5 flex items-center pl3 bb b--light-gray\">\n        Music Visualizer\n      </div>\n      <div className=\"flex-auto\" style={{\n        overflow: 'scroll'\n      }}>\n        <Instruments state={state} dispatch={dispatch} />\n        <Visualizers state={state} dispatch={dispatch} />\n      </div>\n    </div>\n  );\n}\n","// 3rd party library imports\nimport * as Tone from 'tone';\nimport Sketch from 'react-p5';\nimport P5 from 'p5';\nimport React, { useEffect, useMemo, useCallback } from 'react';\n\ntype VisualizerDrawer = (p5: P5, analyzer: Tone.Analyser) => void;\n\ninterface VisualizerContainerProps {\n  visualizer: Visualizer;\n}\n\nexport class Visualizer {\n  public readonly name: string;\n  public readonly draw: VisualizerDrawer;\n\n  constructor(name: string, draw: VisualizerDrawer) {\n    this.name = name;\n    this.draw = draw;\n  }\n}\n\nexport function VisualizerContainer({ visualizer }: VisualizerContainerProps) {\n  const { name, draw } = visualizer;\n\n  const analyzer: Tone.Analyser = useMemo(\n    () => new Tone.Analyser('waveform', 256),\n    [],\n  );\n\n  const onResize = useCallback((p5: P5) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n\n    p5.resizeCanvas(width, height, false);\n  }, []);\n\n  useEffect(() => {\n    Tone.getDestination().volume.value = -5;\n    Tone.getDestination().connect(analyzer);\n    return () => {\n      Tone.getDestination().disconnect(analyzer);\n    };\n  }, [analyzer]);\n\n  const setup = (p5: P5, canvasParentRef: Element) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n    if(name !== \"3D Waveform\" && name !== \"3D Shape\" )\n    {\n    p5.createCanvas(width, height).parent(canvasParentRef);\n    }\n    else\n    {\n      p5.createCanvas(width, height,p5.WEBGL).parent(canvasParentRef);\n    }\n  };\n\n  return (\n    <div className={'bg-black absolute bottom-0 right-0 left-0 h-50'}>\n      <div className={'z-1 absolute left-0 top-0 pa4 white f5'}>{name}</div>\n      <Sketch\n        setup={setup}\n        draw={p5 => draw(p5, analyzer)}\n        windowResized={onResize}\n      />\n    </div>\n  );\n}\n","// 3rd party library imports\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as Tone from 'tone';\nimport { Music32 } from '@carbon/icons-react';\n\n// project imports\nimport { InstrumentContainer } from './Instruments';\nimport { AppState } from './State';\nimport { DispatchAction } from './Reducer';\nimport { SideNav } from './SideNav';\nimport { VisualizerContainer } from './Visualizers';\nimport { List } from 'immutable';\n\n\n\ntype PanelProps = {\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n};\n\n/** ------------------------------------------------------------------------ **\n * Instrument and visualizer component\n ** ------------------------------------------------------------------------ */\n\nfunction InstrumentPanel({ state, dispatch }: PanelProps): JSX.Element {\n  /**\n   * This React component is the top-level for the instrument.\n   */\n  const instrument = state.get('instrument');\n\n  return (\n    <div>\n      {instrument && (\n        <InstrumentContainer\n          state={state}\n          dispatch={dispatch}\n          instrument={instrument}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction VisualizerPanel({ state }: PanelProps): JSX.Element {\n  /**\n   * This React component is the top-level for the visualizer.\n   */\n  const visualizer = state.get('visualizer');\n\n  return (\n    <div>\n      {visualizer && (\n        <VisualizerContainer key={visualizer.name} visualizer={visualizer} />\n      )}\n    </div>\n  );\n}\n\nfunction InstrumentAndVisualizer({ state, dispatch }: PanelProps): JSX.Element {\n  /**\n   * This React component bundles the instrument panel and visualizer panel together.\n   */\n\n  return (\n    <div\n      className=\"absolute right-0 bottom-0 top-0 flex flex-column\"\n      style={{ left: '16rem' }}\n    >\n      <InstrumentPanel state={state} dispatch={dispatch} />\n      <VisualizerPanel state={state} dispatch={dispatch} />\n    </div>\n  );\n}\n\nfunction ShowWelcome({ state, dispatch }: PanelProps): JSX.Element {\n  return (\n    <div\n      className=\"absolute right-0 bottom-0 top-0 flex flex-column items-center justify-center\"\n      style={{ left: '16rem' }}  >  \n      <div className=\"mw6 lh-copy mb4\">\n        <Music32 />\n        <div className=\"f3 fw7 mb2\">Welcome to the case study.</div>\n        <div className=\"f4 mb3\">\n          Select an instrument and a visualizer on the left to serve some fresh beats.\n        </div>\n        {/* <div className=\"f5\">The UI is yours to design. Express yourself.</div> */}\n      </div>\n    </div>\n  );\n}\n\nfunction ShowSongs({ state, dispatch }: PanelProps) : JSX.Element {\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle',\n  ]) as List<OscillatorType>;\n\n\n  const [synth, setSynth] = useState(\n    new Tone.Synth({\n      oscillator: { type: 'amsawtooth' } as Tone.OmniOscillatorOptions,\n    }).toDestination(),\n  );\n  \n  const [search,setSearch] = useState(\"\");\n\n  const notes = state.get('notes');\n\n  const songs: List<any> = state.get('songs', List());\n  useEffect(() => {\n    if(search!==\"\")\n    {\n      dispatch(new DispatchAction('SEARCH_SONGS',{search,songs}));\n    }\n\n    if (notes && synth) {\n      let eachNote = notes.split(' ');\n      let noteObjs = eachNote.map((note: string, idx: number) => ({\n        idx,\n        time: `+${idx / 4}`,\n        note,\n        velocity: 1,\n      }));\n\n      new Tone.Part((time, value) => {\n        // the value is an object which contains both the note and the velocity\n        synth.triggerAttackRelease(value.note, '4n', time, value.velocity);\n        if (value.idx === eachNote.length - 1) {\n          dispatch(new DispatchAction('STOP_SONG'));\n        }\n      }, noteObjs).start(0);\n\n      Tone.Transport.start();\n\n      return () => {\n        Tone.Transport.cancel();\n      };\n    }\n\n    return () => {};\n  }, [notes, synth, search, songs, dispatch]);\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n      }).toDestination();\n    });\n  };\n\n\n  const FilteredSongs : List<any> = state.get('FilteredSongs',List());\n  return(\n    <div>\n      <input  className=\"input-reset ba b--black-20 pa2 mb2 db w-100\" placeholder=\"Enter Song Title\"  value={search} onChange={(value)=>{\n        setSearch(value.target.value);\n      }}></input>\n    <div \n    style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    }}\n    >\n      <div style={{\n        marginTop: '5%',\n      }}>  Search Results by Song Tittle\n      {\n       FilteredSongs !== undefined ?\n       FilteredSongs.map(song=>{\n         return(\n           <div\n           className=\"f6 pointer underline items-center no-underline i dim\"\n            onClick={()=>{\n            dispatch(new DispatchAction('PLAY_SONG', { id: song.get('id') }))\n           }}>\n             {\n               song.get('songTitle')\n             }\n             </div>\n         )\n       }) : null\n\n}\n</div> \n<div style={{\n        marginTop: '5%',\n      }}>\n        Oscillators List\n        {oscillators.map(o => (\n          <div\n          className=\"f6 pointer underline items-center no-underline i dim\"\n          onClick={() => setOscillator(o)}\n          style={{\n            margin: '1%'\n          }}\n          >\n            {\n              o\n            }\n            </div>\n        ))}\n      </div>\n    </div>\n    </div>\n  )\n}\n\n/** ------------------------------------------------------------------------ **\n * Main page component\n ** ------------------------------------------------------------------------ */\n\nexport function MainPage({ state, dispatch }: PanelProps): JSX.Element {\n  /**\n   * This React component bundles together the entire main page.\n   */\n\n  const location = useLocation();\n  const isWelcome = !state.get('instrument');\n  console.log('INSTRUMENT', isWelcome);\n\n  useEffect(() => {\n    dispatch(new DispatchAction('SET_LOCATION', { location }));\n  }, [dispatch, location]);\n\n  return (\n    <div\n      className=\"fixed top-0 left-0 h-100 w-100 bg-white\"\n      onClick={() => Tone.start()}\n    >\n      <SideNav state={state} dispatch={dispatch} />\n      {isWelcome ? (\n        <ShowWelcome state={state} dispatch={dispatch}/>\n      ) : (\n        <InstrumentAndVisualizer state={state} dispatch={dispatch} />\n      )}\n    </div>\n  );\n}\n\n","// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React from 'react';\n\n// project imports\nimport { Instrument, InstrumentProps } from '../Instruments';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of components for Piano.\n ** ------------------------------------------------------------------------ */\n\ninterface PianoKeyProps {\n  note: string; // C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, B\n  duration?: string;\n  synth?: Tone.Synth; // Contains library code for making sound\n  minor?: boolean; // True if minor key, false if major key\n  octave: number;\n  index: number; // octave + index together give a location for the piano key\n}\n\nexport function PianoKey({\n  note,\n  synth,\n  minor,\n  index,\n}: PianoKeyProps): JSX.Element {\n  /**\n   * This React component corresponds to either a major or minor key in the piano.\n   * See `PianoKeyWithoutJSX` for the React component without JSX.\n   */\n  return (\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    <div\n      onMouseDown={() => synth?.triggerAttack(`${note}`)} // Question: what is `onMouseDown`?\n      onMouseUp={() => synth?.triggerRelease('+0.25')} // Question: what is `onMouseUp`?\n      className={classNames('ba pointer absolute dim', {\n        'bg-black black h3': minor, // minor keys are black\n        'black bg-white h4': !minor, // major keys are white\n      })}\n      style={{\n        // CSS\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: minor ? 1 : 0,\n        width: minor ? '1.5rem' : '2rem',\n        marginLeft: minor ? '0.25rem' : 0,\n      }}\n    ></div>\n  );\n}\n\n// eslint-disable-next-line\nfunction PianoKeyWithoutJSX({\n  note,\n  synth,\n  minor,\n  index,\n}: PianoKeyProps): JSX.Element {\n  /**\n   * This React component for pedagogical purposes.\n   * See `PianoKey` for the React component with JSX (JavaScript XML).\n   */\n  return React.createElement(\n    'div',\n    {\n      onMouseDown: () => synth?.triggerAttack(`${note}`),\n      onMouseUp: () => synth?.triggerRelease('+0.25'),\n      className: classNames('ba pointer absolute dim', {\n        'bg-black black h3': minor,\n        'black bg-white h4': !minor,\n      }),\n      style: {\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: minor ? 1 : 0,\n        width: minor ? '1.5rem' : '2rem',\n        marginLeft: minor ? '0.25rem' : 0,\n      },\n    },\n    [],\n  );\n}\n\nfunction PianoType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n        'b--black black': active,\n        'gray b--light-gray': !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}\n\nfunction Piano({ synth, setSynth }: InstrumentProps): JSX.Element {\n  const keys = List([\n    { note: 'C', idx: 0 },\n    { note: 'Db', idx: 0.5 },\n    { note: 'D', idx: 1 },\n    { note: 'Eb', idx: 1.5 },\n    { note: 'E', idx: 2 },\n    { note: 'F', idx: 3 },\n    { note: 'Gb', idx: 3.5 },\n    { note: 'G', idx: 4 },\n    { note: 'Ab', idx: 4.5 },\n    { note: 'A', idx: 5 },\n    { note: 'Bb', idx: 5.5 },\n    { note: 'B', idx: 6 },\n  ]);\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n\n      return new Tone.Synth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n      }).toDestination();\n    });\n  };\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle',\n  ]) as List<OscillatorType>;\n\n  return (\n    <div className=\"pv4\">\n      <div className=\"relative dib h4 w-100 ml4\">\n        {Range(2, 7).map(octave =>\n          keys.map(key => {\n            const isMinor = key.note.indexOf('b') !== -1;\n            const note = `${key.note}${octave}`;\n            return (\n              <PianoKey\n                key={note} //react key\n                note={note}\n                synth={synth}\n                minor={isMinor}\n                octave={octave}\n                index={(octave - 2) * 7 + key.idx}\n              />\n            );\n          }),\n        )}\n      </div>\n      <div className={'pl4 pt4 flex'}>\n        {oscillators.map(o => (\n          <PianoType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const PianoInstrument = new Instrument('Piano', Piano);\n\n","// 3rd party library imports\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\n// project imports\nimport { Visualizer } from '../Visualizers';\n\n\nexport const WaveformVisualizer = new Visualizer(\n  'Waveform',\n  (p5: P5, analyzer: Tone.Analyser) => {\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n    const dim = Math.min(width, height);\n\n    p5.background(0, 0, 0, 255);\n\n    p5.strokeWeight(dim * 0.01);\n    p5.stroke(255, 255, 255, 255);\n    p5.noFill();\n\n    const values = analyzer.getValue();\n    p5.beginShape();\n    for (let i = 0; i < values.length; i++) {\n      const amplitude = values[i] as number;\n      const x = p5.map(i, 0, values.length - 1, 0, width);\n      const y = height / 2 + amplitude * height;\n      // Place vertex\n      p5.vertex(x, y);\n    }\n    p5.endShape();\n  },\n);\n","/*\n    Author: Jasmine Jahan\n    GitHub Handle: jasjahan\n    JasJahan_3D.tsx: Adding a 3D Shape Visualizer\n*/\n\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\nimport { Visualizer } from '../Visualizers';\n\nexport const BoxVisualizer = new Visualizer(\n        '3D Shape',\n        (p5: P5, analyzer: Tone.Analyser) => {\n          const width = window.innerWidth;\n          const height = window.innerHeight / 2;\n\n          p5.background(\"black\"); \n          let values = analyzer.getValue();\n          let locX = p5.mouseX - height / 2;\n          let locY = p5.mouseY - width / 2;\n          p5.ambientLight(50);\n          p5.directionalLight(255, 0, 0, 0.25, 0.25, 0);\n          p5.pointLight(0, 0, 255, locX, locY, 250);\n\n          p5.beginShape();     \n          p5.rotateZ(p5.frameCount * 0.02);\n          p5.rotateX(p5.frameCount * 0.02);\n          p5.specularMaterial(250);\n          p5.translate(-width /10,0,0);\n          for (let i = 0; i < values.length; i++) {  \n            let amplitude = values[i] as number;\n            let x = p5.map(i, 0, values.length -1, 0, amplitude * height) + width;\n            let y = (  height / 2 + amplitude * width) + height;     \n            // p5.translate(width/15, 0, 0); \n            p5.push();\n            p5.box(x *.07, y *.15 , 100);\n            p5.pop(); \n          }\n     \n         p5.endShape();\n        } \n        \n      );\n","/*\n    Author: Thao Ho\n    GitHub Handle: thaoHo618\n\n    thaoHo618.tsx: Adding a circle waveform visualizer\n*/\n\n// 3rd party library imports\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\n// project imports\nimport { Visualizer } from '../Visualizers';\n\nexport const CircleVisualizer = new Visualizer(\n    'Circle Waveform',\n    (p5: P5, analyzer: Tone.Analyser) => {\n    \n        const width = window.innerWidth;\n        const height = window.innerHeight / 2;\n        const dim = Math.min(width, height);\n        \n        p5.angleMode('degrees');\n        \n        p5.background(0, 0, 0, 255); // sets background color\n        p5.stroke(255, 0, 127);  // sets border color\n        p5.strokeWeight(dim * 0.02); // sets border thickness \n        p5.noFill(); // disables filling geometry\n        p5.translate (width/2.5, height/2 ); // sets location of the object\n        const values = analyzer.getValue(); \n\n        p5.beginShape();\n        for ( var i = 0 ; i <= 180; i++) { // creating the first half of the circle, thus <= 180\n            var index = p5.floor(p5.map(i, 0, 180, 0, values.length - 1));\n\n            // using the index to map the radius of the circle to the waveform.\n            var r = p5.map(values[index] as number, -1, 1, 150, 300); // 150 and 350 are min and max radius of circle respectively                \n            \n            var x =  r * p5.sin(i);\n            var y =  r * p5.cos(i) ;\n            p5.vertex(x, y);\n        }\n        p5.endShape();\n\n        \n        p5.beginShape();\n        // eslint-disable-next-line\n        for ( var i = 0 ; i <= 180; i++) { // creating the mirror of the first half\n            // eslint-disable-next-line\n            var index = p5.floor(p5.map(i, 0, 180, 0, values.length - 1));\n\n            // using the index to map the radius of the circle to the waveform.\n            // eslint-disable-next-line\n            var r = p5.map(values[index] as number, -1, 1, 150, 300);            \n            \n            // eslint-disable-next-line\n            var x =  r * (-p5.sin(i)); // Added a negative sign to create a mirrored image of the circle\n            // eslint-disable-next-line\n            var y =  r * p5.cos(i) ;\n            p5.vertex(x, y);\n        }\n        p5.endShape();\n    },\n  );","/*\n    Author: Saptarshi Roy\n    GitHub Handle: sroy97\n\n    sroy97.tsx: string waveform visualizer\n*/\n\n// 3rd party library imports\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\n// project imports\nimport { Visualizer } from '../Visualizers';\n\nexport const EllipticalVisualizer = new Visualizer(\n    'Elliptical Nebular Waveform',\n    (p5: P5, analyzer: Tone.Analyser) => {\n    \n        const width = window.innerWidth;\n        const height = window.innerHeight / 2;\n        \n        p5.background(0, 0, 0, 210); \n        p5.stroke(255,0,127);\n        p5.strokeWeight(3) \n        p5.noFill(); \n\n        const values = analyzer.getValue(); \n\n        p5.beginShape();\n\n        values.forEach((val, i) => {\n          const amp = values[i] as number\n          p5.ellipse(600, 200, 300 + width * amp, 150 + height * amp);\n          p5.ellipse(600, 200, 150 + height * amp, 300 + width * amp);\n        });\n\n        p5.endShape();\n\n    },\n  );\n","// 3rd party library imports\nimport P5 from 'p5';\nimport * as Tone from 'tone';\n\n// project imports\nimport { Visualizer } from '../Visualizers';\n\nexport const BarCircleVisualizer = new Visualizer(\n  '3D Waveform',\n  (p5: P5, analyzer: Tone.Analyser) => {\n\n    const width = window.innerWidth;\n    const height = window.innerHeight / 2;\n\n      p5.background(250, 250, 250, 255);\n\n      const values = analyzer.getValue();\n      p5.beginShape();\n      p5.rotateY(p5.frameCount * 0.01);\n      p5.rotateX(p5.frameCount*0.01);\n      let startx=0;\n      let starty=0;\n      let startz=0;\n      for (let i = 0; i < values.length; i++) {\n        const amplitude = values[i] as number;\n        const x = p5.map(i, 0, values.length - 1, 0, width)-width/2;\n        const y = (height / 2 + amplitude * height)-height/2;\n        // Place vertex\n        if(i%2===0)\n        {\n        p5.translate(x-startx,y-starty,(0.1*i)-startz);\n        startz=i*0.1;\n        }\n        else\n        {\n            p5.translate(x-startx,y-starty,(-0.1*i)-startz);\n            startz=i*-0.1;\n        }\n        p5.push();\n      p5.sphere(8, 6, 4);\n      p5.pop();\n      startx=x;\n      starty=y;\n      }\n      p5.endShape();\n    }\n\n   // p5.endShape();\n\n);\n","// 3rd party\nimport { List, Map } from 'immutable';\nimport { DrumsInstrument } from './instruments/KshitizSareen';\nimport { WindInstruments } from './instruments/sroy97';\n\n// project dependencies\nimport { PianoInstrument} from './instruments/Piano';\nimport { XylophoneInstrument } from './instruments/JasJahan';\nimport { KalimbaInstrument } from './instruments/thaoHo618';\nimport { WaveformVisualizer } from './visualizers/Waveform';\nimport { BoxVisualizer } from './visualizers/JasJahan_3D';\n\n\nimport { CircleVisualizer } from './visualizers/thaoHo618'; \nimport { EllipticalVisualizer } from './visualizers/sroy97';\nimport { BarCircleVisualizer} from './visualizers/KshitizSareen';\n/** ------------------------------------------------------------------------ **\n * The entire application state is stored in AppState.\n ** ------------------------------------------------------------------------ */\n\n/**\n * Observation: pure map (compare and contrast with impure map)\n *\n * 'instrument': Instrument\n * 'visualizer': Visualizer\n */\nexport type AppState = Map<string, any>;\n\n\nconst instruments = List([PianoInstrument]);\nconst visualizers = List([WaveformVisualizer,CircleVisualizer,EllipticalVisualizer,BarCircleVisualizer,BoxVisualizer]);\nexport const defaultState: AppState = Map<string, any>({\n  instruments,\n  visualizers,\n});\n","import { io as newSocket, Socket as SocketIO } from 'socket.io-client';\n\nconst SOCKET_URL = 'ws://localhost:3000';\n\nconst SOCKET_OPTS = {\n  transports: ['websocket'],\n  path: '/ws',\n  autoConnect: true,\n  reconnection: true,\n  timeout: 10000,\n};\n\nlet idCounter = 1;\n\nexport async function send(\n  socket: Socket,\n  name: string,\n  msg: any,\n): Promise<any> {\n  const _id = idCounter++;\n\n  return new Promise((resolve, reject) => {\n    socket.once(`${name}.${_id}`, resp => {\n      const { error, ...success } = resp;\n      if (success) {\n        resolve(success);\n      } else {\n        reject(error);\n      }\n    });\n    socket.emit(name, { _id, ...msg });\n  });\n}\n\n\nexport type Socket = SocketIO;\n\nexport function initializeSocket(\n  onConnect: (socket: Socket) => void,\n  onDisconnect: () => void,\n): Socket {\n  const socket = newSocket(SOCKET_URL, SOCKET_OPTS);\n\n  socket.on('connect', () => {});\n  socket.on('disconnect', onDisconnect);\n\n  return socket;\n}\n","// 3rd party library imports\nimport { useReducer, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n// project imports\nimport { MainPage } from './MainPage';\nimport { DispatchAction, appReducer } from './Reducer';\nimport { defaultState } from './State';\nimport { initializeSocket, send } from './Socket';\n\n\n\n// css imports\nimport 'animate.css';\nimport React from 'react';\n\n/** ------------------------------------------------------------------------ **\n * App component\n ** ------------------------------------------------------------------------ */\n\nfunction App() {\n  const [state, dispatch] = useReducer(appReducer, defaultState);\n\n  useEffect(() => {\n    initializeSocket(\n      async socket => {\n      },\n      () => {\n        dispatch(new DispatchAction('DELETE_SOCKET'));\n      },\n    );\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <MainPage state={state} dispatch={dispatch} />\n        </Route>\n        <Route path=\"/:instrument\">\n          <MainPage state={state} dispatch={dispatch} />\n        </Route>\n        <Route path=\"*\">\n          <div>404</div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// 3rd party library imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// project imports\nimport App from './App';\n\n// CSS\nimport './index.css';\nimport './tachyons.css';\n\n\n/** ------------------------------------------------------------------------ **\n * Entry point.\n ** ------------------------------------------------------------------------ */\n\nfunction onReactLoaded() {\n  console.log('React has loaded.');\n}\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootEl,  // Insert into DOM here\n  onReactLoaded,\n);\n"],"sourceRoot":""}